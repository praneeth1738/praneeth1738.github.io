{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/edit-component/edit-component.component.ts","./src/app/edit-component/edit-component.component.html","./src/app/form-one/form-one.component.ts","./src/app/form-one/form-one.component.html","./src/app/form-serve.service.ts","./src/app/form-two/form-two.component.ts","./src/app/form-two/form-two.component.html","./src/app/indxp/indxp.component.ts","./src/app/indxp/indxp.component.html","./src/app/new-form/new-form.component.ts","./src/app/new-form/new-form.component.html","./src/app/user.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AACE;AACQ;AACA;AACA;;;AAKjE,MAAM,MAAM,GAAW;IACrB,EAAC,IAAI,EAAC,EAAE,EAAC,UAAU,EAAC,OAAO,EAAC,SAAS,EAAC,MAAM,EAAC;IAC/C,EAAC,IAAI,EAAC,OAAO,EAAC,SAAS,EAAC,qEAAc,EAAC;IACvC,EAAC,IAAI,EAAC,SAAS,EAAC,SAAS,EAAC,6EAAgB,EAAC;IAC3C,EAAC,IAAI,EAAC,SAAS,EAAC,SAAS,EAAC,6EAAgB,EAAC;IAC3C,EAAC,IAAI,EAAC,KAAK,EAAC,SAAS,EAAC,6EAAgB,EAAC;CAGtC,CAAC;AAMK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;AAGM,MAAM,iBAAiB,GAAC,CAAC,qEAAc,CAAC;;;;;;;;;;;;;AC1B/C;AAAA;AAAA;AAAA;AAA0C;;;AAOnC,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,QAAQ,CAAC;KAClB;;wEAFY,YAAY;4FAAZ,YAAY;QCPzB,qEACA;QAIA,yEAAkC;QAAA,oFAAgD;QAAA,4DAAM;;6FDE3E,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AACkC;AAC5B;AACgB;AACgB;AACtB;AACN;AACM;AACQ;AACA;AACD;AACV;AACE;AACS;AACG;AACd;AACO;AACJ;AACD;AACA;AAC2B;AAC3B;AACS;AACN;AACR;;;;;;;;;;;;;;;;;;;;;;;;AAyC5C,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,CAAC,qEAAgB,CAAC,YAvBpB;YACP,uEAAa;YACb,oEAAgB;YAChB,wEAAe;YACf,0DAAW;YACX,0EAAgB;YAChB,oEAAa;YACb,gFAAkB;YAClB,uEAAc;YACd,yEAAe;YACf,4FAAuB;YACvB,kEAAmB;YACnB,iFAAmB;YACnB,uEAAc;YACd,2EAAmB;YACnB,uEAAc;YACd,yEAAe;YACf,qEAAa;YACb,+EAAkB;YAClB,yEAAe;YACf,qEAAa;SAEd;mIAIU,SAAS,mBAnClB,2DAAY,0EAEZ,6EAAgB;QAChB,8EAAgB;QAChB,8EAAgB;QAChB,gGAAsB,aAKtB,uEAAa;QACb,oEAAgB;QAChB,wEAAe;QACf,0DAAW;QACX,0EAAgB;QAChB,oEAAa;QACb,gFAAkB;QAClB,uEAAc;QACd,yEAAe;QACf,4FAAuB;QACvB,kEAAmB;QACnB,iFAAmB;QACnB,uEAAc;QACd,2EAAmB;QACnB,uEAAc;QACd,yEAAe;QACf,qEAAa;QACb,+EAAkB;QAClB,yEAAe;QACf,qEAAa;6FAMJ,SAAS;cArCrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,qEAAiB;oBACjB,6EAAgB;oBAChB,8EAAgB;oBAChB,8EAAgB;oBAChB,gGAAsB;iBAGvB;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,oEAAgB;oBAChB,wEAAe;oBACf,0DAAW;oBACX,0EAAgB;oBAChB,oEAAa;oBACb,gFAAkB;oBAClB,uEAAc;oBACd,yEAAe;oBACf,4FAAuB;oBACvB,kEAAmB;oBACnB,iFAAmB;oBACnB,uEAAc;oBACd,2EAAmB;oBACnB,uEAAc;oBACd,yEAAe;oBACf,qEAAa;oBACb,+EAAkB;oBAClB,yEAAe;oBACf,qEAAa;iBAEd;gBACD,SAAS,EAAE,CAAC,qEAAgB,CAAC;gBAC7B,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;kEAhCG,6EAAgB,y6OAFhB,2DAAY,0EAEZ,6EAAgB;IAChB,8EAAgB;IAChB,8EAAgB;IAChB,gGAAsB;;;;;;;;;;;;;ACpC1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoE;AACW;AACoD;;;;;;;;;;;;;IC2F/H,0EACA;IAAA,iFACI;IAAA,4EAAW;IAAA,uDAAiB;IAAA,4DAAY;IAGzC,iFACC;IAAA,6EAAY;IAAA,+DAAI;IAAA,4DAAa;IAC7B,iFAAyB;IAAA,+DAAI;IAAA,4DAAa;IAC1C,iFAA4B;IAAA,mEAAO;IAAA,4DAAa;IAChD,kFAA2B;IAAA,kEAAM;IAAA,4DAAa;IAC9C,kFAA4B;IAAA,mEAAO;IAAA,4DAAa;IAGjD,4DAAa;IACb,6EAAa;IAAA,kGAAsC;IAAA,4DAAY;IAIlE,4DAAiB;IAAA,iEACjB;IAAA,sFACI;IAAA,6EAAW;IAAA,+EAAmB;IAAA,4DAAY;IAC1C,wEACA;IAAA,wFAAwE;IACxE,uFAAyC;IACzC,6EAAa;IAAA,yFAA6B;IAAA,4DAAY;IAExD,4DAAiB;IACjB,sFACE;IAAA,6EAAW;IAAA,6EAAiB;IAAA,4DAAY;IACxC,wEACA;IAAA,wFAAyE;IACzE,uFAA0C;IAC1C,6EAAa;IAAA,uFAA2B;IAAA,4DAAY;IAEtD,4DAAiB;IAElB,kFAAgB;IAAA,6EAAW;IAAA,oFAAwB;IAAA,4DAAY;IAC3D,wEACJ;IAAA,4DAAiB;IAAA,iEAEtB;IAAA,4DAAM;;;;;IAxCsD,+EAAmB;IAE5D,0DAAiB;IAAjB,4FAAiB;IAmBZ,2DAAwB;IAAxB,8EAAwB;IACP,0DAAc;IAAd,oEAAc;IAO/B,0DAAyB;IAAzB,8EAAyB;IACR,0DAAe;IAAf,oEAAe;;ADjHjD,MAAM,sBAAsB;IAEjC,YAAoB,EAAgB,EAAS,UAA6B,EAAiC,IAAS;QAAhG,OAAE,GAAF,EAAE,CAAc;QAAS,eAAU,GAAV,UAAU,CAAmB;QAAiC,SAAI,GAAJ,IAAI,CAAK;QAMtH,WAAM,GAAC,KAAK,CAAC;QACX,WAAM,GAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACnB,IAAI,EAAC,CAAC,EAAE,EAAC,CAAC,yDAAU,CAAC,QAAQ,EAAC,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;YACvD,QAAQ,EAAC,EAAE;YACX,GAAG,EAAC,CAAC,EAAE,EAAC,CAAC,yDAAU,CAAC,QAAQ,EAAC,yDAAU,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC;YACnD,QAAQ,EAAC,CAAC,EAAE,EAAC,CAAC,yDAAU,CAAC,QAAQ,EAAC,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;YAC3D,IAAI,EAAC,CAAC,EAAE,EAAC,CAAC,yDAAU,CAAC,QAAQ,EAAC,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;YACxD,KAAK,EAAC,CAAC,EAAE,EAAC,CAAC,yDAAU,CAAC,QAAQ,EAAC,yDAAU,CAAC,KAAK,CAAC,CAAC;YACjD,GAAG,EAAC,CAAC,EAAE,EAAC,CAAC,yDAAU,CAAC,QAAQ,EAAC,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;YACtD,MAAM,EAAC,CAAC,EAAE,EAAE;YAEZ,aAAa,EAAC,CAAC,EAAE,EAAC,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACxC,UAAU,EAAC,CAAC,EAAE,EAAC,CAAC,yDAAU,CAAC,QAAQ,EAAC,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;YAC7D,KAAK,EAAC,CAAC,EAAE,EAAC,CAAC,yDAAU,CAAC,QAAQ,EAAC,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;YACzD,SAAS,EAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;gBACvB,IAAI,CAAC,MAAM,EAAE;aAEb,CAAC;SAEH,CAAC;IAzBsH,CAAC;IAEzH,QAAQ;QACN,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAClC,CAAC;IAwBD,MAAM;QACJ,OAAO,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACnB,MAAM,EAAC,CAAC,EAAE,EAAC,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACjC,KAAK,EAAC,CAAC,EAAE,EAAC,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAChC,KAAK,EAAC,CAAC,EAAE,EAAC,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAChC,GAAG,EAAC,EAAE;SACN,CAAC;IACJ,CAAC;IAAA,CAAC;IACF,IAAI,SAAS;QACZ,IAAI,CAAC,QAAQ,EAAE,CAAC;QAChB,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,WAAW,CAAc,CAAC;IACnD,CAAC;IACD,OAAO;QAEL,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;IACrC,CAAC;IACD,QAAQ;QACN,IAAI,IAAI,GAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,KAAK,CAAC;QACjD,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,IAAI,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE;YAChD,IAAI,KAAK,GAAC,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC;YAExC,IAAI,KAAK,GAAC,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC;YAEtC,IAAI,QAAQ,GAAC,KAAK,CAAC,WAAW,EAAE,GAAC,KAAK,CAAC,WAAW,EAAE,CAAC;YAErD,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,GAAC,QAAQ,CAAC;SAGxB;QAED,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;IAErD,CAAC;IACD,QAAQ;QACN,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;IAEpB,CAAC;IACD,MAAM;QACJ,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAC,IAAI,EAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI;YAClD,QAAQ,EAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ;YACpC,GAAG,EAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG;YACzB,QAAQ,EAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ;YACnC,IAAI,EAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI;YAC3B,KAAK,EAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK;YAC7B,MAAM,EAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM;YAC/B,GAAG,EAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG;YACzB,aAAa,EAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,aAAa;YAC7C,KAAK,EAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK;YAC7B,UAAU,EAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,UAAU;YACvC,SAAS,EAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,EAAC,CAAC,CAAC;QAExC,IAAI,CAAC,MAAM,GAAC,IAAI,CAAC;QACjB,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,EAAC,IAAI,EAAC,OAAO,EAAC,CAAC,CAAC;IAE9C,CAAC;;4FApFU,sBAAsB,sUAEkD,wEAAe;sGAFvF,sBAAsB;QCT/B,0EACJ;QAAA,yEACY;QAAA,yEACZ;QAAA,iFACI;QAAA,4EAAW;QAAA,+DAAI;QAAA,4DAAY;QAC/B,sEACA;QAAA,4EAAa;QAAA,2GAAgD;QAAA,4DAAY;QAEzE,4DAAiB;QACjB,gEAEA;QAAA,kFACI;QAAA,6EAAW;QAAA,iEAAK;QAAA,4DAAY;QAChC,uEACA;QAAA,6EAAa;QAAA,qGAAyC;QAAA,4DAAY;QAElE,4DAAiB;QACjB,iEAEA;QAAA,kFACI;QAAA,6EAAW;QAAA,+DAAG;QAAA,4DAAY;QAC9B,uEACA;QAAA,6EAAc;QAAA,2GAA8C;QAAA,4DAAY;QAExE,4DAAiB;QACjB,iEACA;QAAA,kFACI;QAAA,6EAAW;QAAA,oEAAQ;QAAA,4DAAY;QACnC,uEACA;QAAA,6EAAa;QAAA,iHAAqD;QAAA,4DAAY;QAE9E,4DAAiB;QACjB,iEACA;QAAA,uEACA;QAAA,sFACI;QAAA,6EAAW;QAAA,kEAAM;QAAA,4DAAY;QAC7B,uFAA+B;QAAA,gEAAI;QAAA,4DAAmB;QACtD,uFAAiC;QAAA,kEAAM;QAAA,4DAAmB;QAC9D,4DAAkB;QAClB,4DAAM;QAGN,iEACA;QAAA,kFACI;QAAA,6EAAW;QAAA,yEAAa;QAAA,4DAAY;QACxC,wEACA;QAAA,6EAAa;QAAA,uGAA4C;QAAA,4DAAY;QAErE,4DAAiB;QACjB,iEAEA;QAAA,kFACI;QAAA,6EAAW;QAAA,sEAAU;QAAA,4DAAY;QACrC,wEACA;QAAA,6EAAa;QAAA,oGAAwC;QAAA,4DAAY;QAEjE,4DAAiB;QACjB,4DAAM;QACN,2EAEA;QAAA,kFACI;QAAA,6EAAW;QAAA,yEAAa;QAAA,4DAAY;QAChC,kFAEA;QAAA,kFAAuB;QAAA,8DAAE;QAAA,4DAAa;QACtC,kFAAuB;QAAA,8DAAE;QAAA,4DAAa;QACtC,kFAAwB;QAAA,+DAAG;QAAA,4DAAa;QAExC,6EAAa;QAAA,kHAAsD;QAAA,4DAAY;QAGhF,4DAAa;QAChB,4DAAiB;QACjB,iEAEA;QAAA,kFACI;QAAA,6EAAW;QAAA,sEAAU;QAAA,4DAAY;QACpC,wEACA;QAAA,6EAAa;QAAA,mGAAuC;QAAA,4DAAY;QAEjE,4DAAiB;QACjB,iEACJ;QAAA,kFACI;QAAA,6EAAW;QAAA,2EAAe;QAAA,4DAAY;QACtC,2EAAyF;QACzF,6EAAa;QAAA,oHAAwD;QAAA,4DAAY;QAErF,4DAAiB;QAEjB,iEACA;QAAA,2EAEI;QAAA,sHACA;QAuCG,8EAA4B;QAApB,+IAAS,aAAS,IAAC;QAAC,yEAAa;QAAA,4DAAS;QAAA,iEAGzD;QAAA,4DAAM;QAEF,4DAAM;QAEN,iEAAI;QAAA,iEACJ;QAAA,8EAAyE;QAArB,+IAAS,cAAU,IAAC;QAAC,iEAAK;QAAA,4DAAS;QACvF,iEAAI;QAAA,iEACJ;QAAA,8EAAgE;QAAvB,+IAAS,YAAQ,IAAC;QAAK,oEAAU;QAAA,4DAAS;QAKvF,4DAAM;QACN,2EAAyE;QAAA,sEAAI;QAAA,2FAA+B;QAAA,4DAAK;QACjH,sEAAI;QAAA,oFAAwB;QAAA,4DAAK;QAAA,4DAAM;QACvC,4DAAO;;QAtJG,iFAAoB;QACzB,0DAAiB;QAAjB,8EAAiB;QA2Fb,2DAAkD;QAAlD,2FAAkD;QAwDrD,2DAAkB;QAAlB,+EAAkB;;6FD3IX,sBAAsB;cALlC,uDAAS;eAAC;gBACT,QAAQ,EAAE,oBAAoB;gBAC9B,WAAW,EAAE,iCAAiC;gBAC9C,SAAS,EAAE,CAAC,gCAAgC,CAAC;aAC9C;;sBAG6E,oDAAM;uBAAC,wEAAe;;;;;;;;;;;;;;AEZpG;AAAA;AAAA;AAAA;AAAA;AAA6D;AACwB;;;;;AAU9E,MAAM,gBAAgB;IAK3B,YAAoB,EAAgB,EAAS,UAA6B;QAAtD,OAAE,GAAF,EAAE,CAAc;QAAS,eAAU,GAAV,UAAU,CAAmB;QAHlE,UAAK,GAAC,CAAC,CAAC;QAQlB,cAAS,GAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACtB,IAAI,EAAC,CAAC,EAAE,EAAC,CAAC,yDAAU,CAAC,QAAQ,EAAC,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;YACvD,QAAQ,EAAC,EAAE;YACX,GAAG,EAAC,CAAC,EAAE,EAAC,CAAC,yDAAU,CAAC,QAAQ,EAAC,yDAAU,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC;YACnD,QAAQ,EAAC,CAAC,EAAE,EAAC,CAAC,yDAAU,CAAC,QAAQ,EAAC,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;YAC3D,IAAI,EAAC,CAAC,EAAE,EAAC,CAAC,yDAAU,CAAC,QAAQ,EAAC,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;YACxD,KAAK,EAAC,CAAC,EAAE,EAAC,CAAC,yDAAU,CAAC,QAAQ,EAAC,yDAAU,CAAC,KAAK,CAAC,CAAC;YACjD,GAAG,EAAC,CAAC,EAAE,EAAC,CAAC,yDAAU,CAAC,QAAQ,EAAC,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;YACtD,MAAM,EAAC,CAAC,EAAE,EAAE;SACb,CAAC;IAd8E,CAAC;IAE/E,QAAQ;IAER,CAAC;IAaH,IAAI,IAAI;QACN,OAAO,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC;IACnC,CAAC;IACD,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,QAAQ,CAAC;IACvC,CAAC;IACD,IAAI,GAAG;QACL,OAAO,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC;IAClC,CAAC;IACD,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,QAAQ,CAAC;IACvC,CAAC;IACD,IAAI,IAAI;QACN,OAAO,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC;IACnC,CAAC;IACD,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,CAAC;IACpC,CAAC;IACD,IAAI,GAAG;QACL,OAAO,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC;IAClC,CAAC;IACD,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC;IACrC,CAAC;IAMD,QAAQ;QAEN,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;QACvB,IAAI,CAAC,aAAa,CAAC,SAAS,EAAE,CAAC;QACjC,IAAI,CAAC,SAAS,CAAC,oBAAoB,EAAE,CAAC;QACpC,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC;QAC/B,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC;QAC9B,IAAI,CAAC,SAAS,CAAC,eAAe,EAAE,CAAC;IACnC,CAAC;IACD,SAAS,CAAC,MAAgB;QACxB,IAAI,CAAC,KAAK,GAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;QAEhC,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAC,IAAI,CAAC,KAAK,EAAE,CAAC;QAEjC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,EAAC,IAAI,EAAC,IAAI,CAAC,KAAK,CAAC,IAAI;YACpB,QAAQ,EAAC,IAAI,CAAC,KAAK,CAAC,QAAQ;YAC7B,GAAG,EAAC,IAAI,CAAC,KAAK,CAAC,GAAG;YAClB,QAAQ,EAAC,IAAI,CAAC,KAAK,CAAC,QAAQ;YAC5B,IAAI,EAAC,IAAI,CAAC,KAAK,CAAC,IAAI;YACpB,KAAK,EAAC,IAAI,CAAC,KAAK,CAAC,KAAK;YACtB,MAAM,EAAC,IAAI,CAAC,KAAK,CAAC,MAAM;YACxB,GAAG,EAAC,IAAI,CAAC,KAAK,CAAC,GAAG;YAClB,aAAa,EAAC,MAAM,CAAC,aAAa;YAClC,KAAK,EAAC,MAAM,CAAC,KAAK;YAClB,UAAU,EAAC,MAAM,CAAC,UAAU;YAC5B,SAAS,EAAC,MAAM,CAAC,SAAS,EAAC,CAAC,CAAC;QAE7B,KAAK,CAAC,4BAA4B,CAAC,CAAC;QAE5D,IAAI,CAAC,QAAQ,EAAE,CAAC;QAChB,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,EAAC,GAAG,EAAC,4BAA4B,EAAC,CAAC,CAAC;IAChE,CAAC;IACD,MAAM,CAAC,GAAa;QAElB,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,EAAC,IAAI,EAAC,GAAG,CAAC,IAAI,EAAC,QAAQ,EAAC,GAAG,CAAC,QAAQ,EAAC,GAAG,EAAC,GAAG,CAAC,GAAG,EAAC,QAAQ,EAAC,GAAG,CAAC,QAAQ,EAAC,IAAI,EAAC,GAAG,CAAC,IAAI,EAAC,KAAK,EAAC,GAAG,CAAC,KAAK,EAAC,MAAM,EAAC,GAAG,CAAC,MAAM,EAAC,GAAG,EAAC,GAAG,CAAC,GAAG,EAAC,CAAC,CAAC;QAC/J,IAAI,CAAC,QAAQ,GAAC,EAAC,aAAa,EAAC,GAAG,CAAC,aAAa,EAAC,KAAK,EAAC,GAAG,CAAC,KAAK,EAAC,UAAU,EAAC,GAAG,CAAC,UAAU,EAAC,SAAS,EAAC,GAAG,CAAC,SAAS,EAAC,CAAC;QAClH,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,EAAC,aAAa,EAAC,GAAG,CAAC,aAAa,EAAC,KAAK,EAAC,GAAG,CAAC,KAAK,EAAC,UAAU,EAAC,GAAG,CAAC,UAAU,EAAC,SAAS,EAAC,GAAG,CAAC,SAAS,EAAC,CAAC,CAAC;IACnI,CAAC;;gFAxFY,gBAAgB;gGAAhB,gBAAgB;;;;;;QCX7B,yEACI;QAAA,gEACA;QAAA,gEACA;QAAA,gEACJ;QAAA,yEAEI;QAAA,6EACI;QAAA,0EACA;QAAA,yEACR;QAAA,iFACI;QAAA,6EAAW;QAAA,gEAAI;QAAA,4DAAY;QAC/B,uEACA;QAAA,6EAAa;QAAA,4GAAgD;QAAA,4DAAY;QAEzE,4DAAiB;QACjB,iEAEA;QAAA,kFACI;QAAA,6EAAW;QAAA,iEAAK;QAAA,4DAAY;QAChC,uEACA;QAAA,6EAAa;QAAA,qGAAyC;QAAA,4DAAY;QAClE,4DAAiB;QAGjB,kFACI;QAAA,6EAAW;QAAA,+DAAG;QAAA,4DAAY;QAC9B,uEACA;QAAA,6EAAc;QAAA,2GAA8C;QAAA,4DAAY;QAExE,4DAAiB;QAEjB,kFACI;QAAA,6EAAW;QAAA,oEAAQ;QAAA,4DAAY;QACnC,uEACA;QAAA,6EAAa;QAAA,iHAAqD;QAAA,4DAAY;QAC9E,4DAAiB;QAEjB,uEACA;QAAA,sFACI;QAAA,6EAAW;QAAA,kEAAM;QAAA,4DAAY;QAC7B,wFAA+B;QAAA,gEAAI;QAAA,4DAAmB;QACtD,wFAAiC;QAAA,kEAAM;QAAA,4DAAmB;QAC7D,4DAAkB;QACnB,4DAAM;QAGN,iEACA;QAAA,kFACI;QAAA,6EAAW;QAAA,yEAAa;QAAA,4DAAY;QACxC,wEACA;QAAA,6EAAa;QAAA,uGAA4C;QAAA,4DAAY;QACrE,4DAAiB;QAGjB,kFACI;QAAA,6EAAW;QAAA,sEAAU;QAAA,4DAAY;QACrC,wEACA;QAAA,6EAAa;QAAA,oGAAwC;QAAA,4DAAY;QAEjE,4DAAiB;QAEjB,4DAAM;QACE,4DAAU;QAAA,2EAClB;QAAA,6EACA;QAAA,oFAAiE;QAAnD,mJAAW,cAAU,IAAC,6FAAS,qBAAiB,IAA1B;QAA6B,gEAAG;QAAA,4DAAe;QACnF,4DAAQ;QAER,4DAAU;QAAA,4DAAO;QAMjB,4DAAM;QACN,iEAAI;QAAA,iEAAI;QAAA,iEAAI;QAAA,iEACZ;QAAA,2EAAiB;QAAA,oFAAuD;QAAzC,uJAAU,kBAAc,IAAC;QAAC,4DAAe;QACpE,4DAAM;QAGV,4DAAM;;QAzEI,0DAAuB;QAAvB,oFAAuB;;6FDKpB,gBAAgB;cAL5B,uDAAS;eAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,WAAW,EAAE,2BAA2B;gBACxC,SAAS,EAAE,CAAC,0BAA0B,CAAC;aACxC;;kBAIE,uDAAS;mBAAC,eAAe;;;;;;;;;;;;;;AEd5B;AAAA;AAAA;AAAA;AAA2C;AACZ;;AAOxB,MAAM,gBAAgB;IAE3B;QACA,OAAE,GAAC,IAAI,IAAI,EAAE,CAAC;QACd,OAAE,GAAC,IAAI,IAAI,EAAE,CAAC;QAwDb,YAAO,GAAC,IAAI,4CAAO,EAAO,CAAC;QACnB,WAAM,GAAE,IAAI,4CAAO,EAAO,CAAC;QACnC,uBAAkB,GAAC,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC;IA5D/B,CAAC;IAMjB;;OAEG;IAEI,OAAO;QACZ,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;QACpC,OAAO,gBAAgB,CAAC,KAAK,CAAC;IAEhC,CAAC;IAEM,QAAQ,CAAC,GAAc;QAC5B,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,gBAAgB,CAAC,KAAK,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE;YAClE,IAAI,GAAG,CAAC,QAAQ,IAAE,gBAAgB,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,QAAQ,EAAC;gBACvD,gBAAgB,CAAC,KAAK,CAAC,KAAK,CAAC,GAAC,GAAG,CAAC;aACnC;SAGJ;IAAA,CAAC;IACM,OAAO,CAAC,GAAa;QAC3B,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACjB,gBAAgB,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAC,GAAG,CAAC;QACzC,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;IACtC,CAAC;IACM,OAAO,CAAC,GAAc;QAC3B,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,gBAAgB,CAAC,KAAK,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE;YAClE,IAAI,GAAG,CAAC,IAAI,IAAE,gBAAgB,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,IAAI,EAAC;gBAC/C,gBAAgB,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,EAAC,CAAC,CAAC,CAAC;aACxC;SAEF;IAKH,CAAC;IACD;;OAEG;IACI,WAAW,CAAC,GAAa;QAC9B,IAAG,GAAG,EAAC;YACL,KAAK,CAAC,GAAG,CAAC,KAAK,GAAC,GAAG,CAAC,SAAS,CAAC,CAAC;YAC/B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC;SACvB;aAAI;YAAC,KAAK,CAAC,MAAM,CAAC;SAAC;IAEtB,CAAC;IACM,SAAS,CAAC,GAAS;QACxB,IAAG,GAAG,EAAC;YACL,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SACvB;IAEH,CAAC;;AAnDO,sBAAK,GAAa,EAAE,CAAE;gFAPnB,gBAAgB;mGAAhB,gBAAgB,WAAhB,gBAAgB,mBAHf,MAAM;6FAGP,gBAAgB;cAJ5B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwE;AACmB;;;;;;;;;;;;;;ICgCvF,0EACA;IAAA,iFACI;IAAA,4EAAW;IAAA,uDAAiB;IAAA,4DAAY;IAGzC,iFACC;IAAA,6EAAY;IAAA,+DAAI;IAAA,4DAAa;IAC7B,iFAAyB;IAAA,+DAAI;IAAA,4DAAa;IAC1C,iFAA4B;IAAA,mEAAO;IAAA,4DAAa;IAChD,kFAA2B;IAAA,kEAAM;IAAA,4DAAa;IAC9C,kFAA4B;IAAA,mEAAO;IAAA,4DAAa;IAGjD,4DAAa;IAEb,6EAAa;IAAA,kGAAsC;IAAA,4DAAY;IAElE,4DAAiB;IACjB,sFACI;IAAA,6EAAW;IAAA,+EAAmB;IAAA,4DAAY;IAC1C,wEACA;IAAA,wFAAwE;IACxE,uFAAyC;IACzC,6EAAa;IAAA,yFAA6B;IAAA,4DAAY;IACxD,4DAAiB;IACjB,sFACE;IAAA,6EAAW;IAAA,6EAAiB;IAAA,4DAAY;IACxC,wEACA;IAAA,wFAAyE;IACzE,uFAA0C;IAC1C,6EAAa;IAAA,uFAA2B;IAAA,4DAAY;IACtD,4DAAiB;IAElB,kFAAgB;IAAA,6EAAW;IAAA,oFAAwB;IAAA,4DAAY;IAC3D,wEACJ;IAAA,4DAAiB;IACjB,8EAA8D;IAApB,oTAAmB;IAAC,yEAAa;IAAA,4DAAS;IAGzF,4DAAM;;;;;IAvCsD,+EAAmB;IAE5D,0DAAiB;IAAjB,4FAAiB;IAkBZ,2DAAwB;IAAxB,8EAAwB;IACP,0DAAc;IAAd,oEAAc;IAM/B,0DAAyB;IAAzB,8EAAyB;IACR,0DAAe;IAAf,oEAAe;;ADlDjD,MAAM,gBAAgB;IAO3B,YAAoB,EAAc,EAAS,OAAyB;QAAhD,OAAE,GAAF,EAAE,CAAY;QAAS,YAAO,GAAP,OAAO,CAAkB;QAHnD,YAAO,GAAC,IAAI,0DAAY,EAAE,CAAC;QAC3B,UAAK,GAAC,IAAI,0DAAY,EAAE,CAAC;QAMhC,UAAK,GAAC,CAAC,CAAC;QACf,cAAS,GAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACvB,aAAa,EAAC,CAAC,EAAE,EAAC,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACxC,UAAU,EAAC,CAAC,EAAE,EAAC,CAAC,yDAAU,CAAC,QAAQ,EAAC,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;YAC7D,KAAK,EAAC,CAAC,EAAE,EAAC,CAAC,yDAAU,CAAC,QAAQ,EAAC,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;YACzD,SAAS,EAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;gBACvB,IAAI,CAAC,MAAM,EAAE;aAEb,CAAC;SAED,CAAC;IAZH,CAAC;IAgBA,IAAW,aAAa;QACtB,OAAO,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,aAAa,CAAC;IAE5C,CAAC;IACD,IAAW,UAAU;QACnB,OAAO,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,UAAU,CAAC;IAEzC,CAAC;IACD,IAAW,KAAK;QACd,OAAO,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,CAAC;IAEpC,CAAC;IAID,QAAQ;QACP,IAAI,CAAC,IAAI,GAAE,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,GAAG,EAAC,EAAE;YAC9C,IAAI,CAAC,SAAS,CAAC,UAAU,GAAC,GAAG,CAAC;YAC9B,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC;IAEJ,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;QACvB,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACpB,IAAI,CAAC,SAAS,CAAC,eAAe,EAAE,CAAC;IAEjC,CAAC;IAED,MAAM;QACJ,OAAO,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAClB,MAAM,EAAC,CAAC,EAAE,EAAC,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACjC,KAAK,EAAC,CAAC,EAAE,EAAC,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAChC,KAAK,EAAC,CAAC,EAAE,EAAC,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAChC,GAAG,EAAC,EAAE;SACP,CAAC;IACJ,CAAC;IAAA,CAAC;IACF,IAAI,SAAS;QACZ,IAAI,CAAC,QAAQ,EAAE,CAAC;QAChB,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,WAAW,CAAc,CAAC;IACtD,CAAC;IACD,OAAO;QAEL,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;IACrC,CAAC;IAGD,QAAQ;QACN,IAAI,IAAI,GAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,KAAK,CAAC;QACpD,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,IAAI,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE;YAChD,IAAI,KAAK,GAAC,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC;YAExC,IAAI,KAAK,GAAC,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC;YAEtC,IAAI,QAAQ,GAAC,KAAK,CAAC,WAAW,EAAE,GAAC,KAAK,CAAC,WAAW,EAAE,CAAC;YACrD,IAAI,CAAC,KAAK,GAAC,QAAQ,CAAC;YACpB,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,GAAC,QAAQ,CAAC;SAGxB;QAED,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;IAExD,CAAC;IAED,SAAS;QACP,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;QACtC,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;;gFA9FI,gBAAgB;gGAAhB,gBAAgB;QCT7B,yEAEI;QAAA,iFACA;QAAA,4EAAW;QAAA,wEAAa;QAAA,4DAAY;QAChC,gFAEA;QAAA,gFAAuB;QAAA,6DAAE;QAAA,4DAAa;QACtC,gFAAuB;QAAA,6DAAE;QAAA,4DAAa;QACtC,gFAAwB;QAAA,+DAAG;QAAA,4DAAa;QAIzC,4DAAa;QAChB,4DAAiB;QAGjB,kFACI;QAAA,6EAAW;QAAA,sEAAU;QAAA,4DAAY;QACpC,uEACA;QAAA,6EAAa;QAAA,mGAAuC;QAAA,4DAAY;QACjE,4DAAiB;QACjB,iEACJ;QAAA,kFACI;QAAA,6EAAW;QAAA,2EAAe;QAAA,4DAAY;QACtC,0EAAyF;QACzF,6EAAa;QAAA,oHAAwD;QAAA,4DAAY;QACrF,4DAAiB;QAEjB,iEACA;QAAA,0EAEI;QAAA,+GACA;QAsCE,iEAKF;QAAA,4DAAM;QACV,iEAAI;QAAA,iEACH;QAAA,6EAAqF;QAArB,yIAAS,cAAU,IAAC;QAAC,4EAAU;QAAA,kEAAM;QAAA,4DAAW;QAAA,4DAAS;QAGtH,8EAAyG;QAAtB,yIAAS,eAAW,IAAC;QAAC,4EAAU;QAAA,gEAAI;QAAA,4DAAW;QAAA,4DAAS;QAE/I,4DAAM;;QAlFD,oFAAuB;QA+BnB,2DAAkD;QAAlD,2FAAkD;QAiD/C,0DAA6B;QAA7B,0FAA6B;;6FDvE5B,gBAAgB;cAL5B,uDAAS;eAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,WAAW,EAAE,2BAA2B;gBACxC,SAAS,EAAE,CAAC,0BAA0B,CAAC;aACxC;;kBAKE,oDAAM;;kBACN,oDAAM;;;;;;;;;;;;;;AEhBT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACnB;;;;;;ICSnB,4EAAwD;IAAA,qFAA0B;IAAA,4DAAQ;;;IAC1F,4EAAyD;IAAA,qFAA0B;IAAA,4DAAQ;;;IAF5F,sEACC;IAAA,sHAAwD;IACxD,sHAAyD;IAC1D,4DAAM;;;;IAFsB,0DAA4B;IAA5B,oFAA4B;IAC5B,0DAA6B;IAA7B,qFAA6B;;;IAUpD,4EAAsD;IAAA,kJAAuF;IAAA,4DAAQ;;;IACrJ,4EAAuD;IAAA,wFAA6B;IAAA,4DAAQ;;;IAFhG,sEACI;IAAA,sHAAsD;IACtD,sHAAuD;IACxD,4DAAM;;;;IAFsB,0DAA0B;IAA1B,oFAA0B;IAC1B,0DAA2B;IAA3B,qFAA2B;;;IAQtD,4EAAuD;IAAA,kJAAuF;IAAA,4DAAQ;;;IACtJ,4EAAwD;IAAA,wFAA6B;IAAA,4DAAQ;;;IAFjG,sEACI;IAAA,sHAAuD;IACvD,sHAAwD;IACzD,4DAAM;;;;IAFsB,0DAA2B;IAA3B,oFAA2B;IAC3B,0DAA4B;IAA5B,qFAA4B;;;IAE3D,4EAA0D;IAAA,kFAAuB;IAAA,4DAAQ;;;IAS7F,4EAA6D;IAAA,uFAA4B;IAAA,4DAAQ;;;IAS7F,4EAA0D;IAAA,sFAA2B;IAAA,4DAAQ;;;AD3ClG,MAAM,cAAc;IAIzB;QAFA,cAAS,GAAC,CAAC,MAAM,EAAC,QAAQ,CAAC,CAAC;QAC5B,UAAK,GAAC,IAAI,0CAAI,CAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,KAAK,EAAC,EAAE,CAAC,CAAC;IAClB,CAAC;IAEjB,QAAQ;QAEN,OAAO,CAAC,GAAG,CAAC,6BAA6B,CAAC,CAAC;IAC7C,CAAC;IACD,MAAM;QACJ,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;IAC5B,CAAC;IAED,MAAM;QACJ,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;QACjC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;QAClC,IAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,IAAE,IAAI,CAAC,KAAK,CAAC,SAAS,EAAC;YAAC,OAAO,KAAK;SAAC;;YAAK,OAAO,IAAI,CAAC;IAC9E,CAAC;IACD,MAAM;QACJ,KAAK,CAAC,8CAA8C,GAAC,IAAI,CAAC,KAAK,CAAC,KAAK,GAAC,mBAAmB,GAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAC,WAAW,GAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;IAC/I,CAAC;IACD,MAAM;QACJ,QAAQ,CAAC,MAAM,EAAE,CAAC;IACpB,CAAC;IACD,KAAK;QACH,IAAI,CAAC,GAAE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;QACzB,IAAG,CAAC,IAAE,EAAE,EAAC;YACP,OAAO,IAAI,CAAC;SACb;;YAAK,OAAO,KAAK,CAAC;IAErB,CAAC;;4EA/BU,cAAc;8FAAd,cAAc;QCR3B,gEAAI;QAAA,gEAAI;QAAA,gEAER;QAAA,yEACA;QAAA,6EACI;QAAA,qEAAI;QAAA,kEAAO;QAAA,4DAAK;QAChB,yEACI;QAAA,wEAAS;QAAA,iEAAK;QAAA,4DAAQ;QAClB,+EAED;QADqD,wLAAyB;QAD7E,4DAED;QAAA,4GACC;QAIR,4DAAM;QAEN,0EACI;QAAA,yEAAQ;QAAA,sEAAU;QAAA,4DAAQ;QACtB,+EAEA;QADgD,2LAA4B;QAD5E,4DAEA;QAAA,4GACI;QAGZ,4DAAM;QACN,0EACI;QAAA,yEAAQ;QAAA,8EAAkB;QAAA,4DAAQ;QAC9B,gFAEA;QADoD,4LAA6B;QADjF,4DAEA;QAAA,4GACI;QAGJ,iHAA0D;QAClE,4DAAM;QAEN,0EAAwB;QAAA,kFACpB;QADsI,0LAA0B;QAChK,yEAAQ;QAAA,oEAAQ;QAAA,4DAAQ;QACrB,8EAA2B;QAAA,qFAAyB;QAAA,4DAAS;QAC5D,8EAAqB;QAAA,gEAAI;QAAA,4DAAS;QAClC,8EAAuB;QAAA,kEAAM;QAAA,4DAAS;QAC1C,4DAAS;QACT,iHAA6D;QACjE,4DAAM;QAEN,2EAEQ;QAAA,iFAGA;QADgD,yLAA0B;QAF1E,4DAGA;QAAA,6EAAiC;QAAA,kEAAM;QAAA,4DAAQ;QAAA,iEAC/C;QAAA,iHAA0D;QAClE,4DAAM;QAEN,2EACC;QAAA,8EAAmD;QAAnB,uIAAS,YAAQ,IAAC;QAAC,kEAAM;QAAA,4DAAS;QAC/D,8EAAoF;QAAnB,uIAAS,YAAQ,IAAC;QAAC,kEAAM;QAAA,4DAAS;QACvG,4DAAM;QAIV,4DAAO;QACP,4DAAM;QACN,yEAA8B;QAAA,sEAAU;QAAA,4DAAI;;;;;;;;QAvDhC,2DAAmD;QAAnD,mGAAmD;QAAC,oFAAyB;QACzE,0DAAsD;QAAtD,4GAAsD;QAU1D,0DAA+C;QAA/C,mGAA+C;QAAC,uFAA4B;QACvE,0DAAgD;QAAhD,4GAAgD;QAQrD,0DAAkD;QAAlD,mGAAkD;QAAE,wFAA6B;QAC5E,0DAAmD;QAAnD,4GAAmD;QAI7B,0DAA8B;QAA9B,6FAA8B;QAGI,0DAA8C;QAA9C,kGAA8C;QAAuB,qFAA0B;QAMzJ,2DAAiC;QAAjC,2FAAiC;QAOpC,0DAA+C;QAA/C,qGAA+C;QAAC,qFAA0B;QAE/C,0DAA6B;QAA7B,8FAA6B;QAKpD,0DAAgC;QAAhC,sFAAgC;QAO7C,0DAA0B;QAA1B,8IAA0B;;6FDvDhB,cAAc;cAL1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,uBAAuB,CAAC;aACrC;;;;;;;;;;;;;;AEPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmF;AAGb;AAEc;AAEnC;AACU;;;;;;;;;;;;ICGrD,sFAAmD;IAAA,yEAAS;IAAA,gEAAI;IAAA,4DAAS;IAAA,4DAAkB;;;IAC3F,2EAAqC;IAAA,uDAAqB;IAAA,4DAAW;;;IAAhC,0DAAqB;IAArB,gGAAqB;;;IAK1D,sFAAoD;IAAA,yEAAS;IAAA,iEAAK;IAAA,4DAAS;IAAC,4DAAkB;;;IAC9F,2EAAqC;IAAA,uDAAiB;IAAA,4DAAW;;;IAA5B,0DAAiB;IAAjB,4FAAiB;;;IAKtD,sFAAoD;IAAA,yEAAS;IAAA,gEAAI;IAAA,4DAAS;IAAC,4DAAkB;;;IAC7F,2EAAqC;IAAA,uDAAgB;IAAA,4DAAW;;;IAA3B,0DAAgB;IAAhB,2FAAgB;;;IAKrD,sFAAoD;IAAA,yEAAS;IAAA,iEAAK;IAAA,4DAAS;IAAC,4DAAkB;;;IAC9F,2EAAqC;IAAA,uDAAiB;IAAA,4DAAW;;;IAA5B,0DAAiB;IAAjB,4FAAiB;;;IAOtD,sFAAoD;IAAA,yEAAS;IAAA,gEAAI;IAAA,4DAAS;IAAC,4DAAkB;;;IAC7F,2EAAqC;IAAA,uDAAgB;IAAA,4DAAW;;;IAA3B,0DAAgB;IAAhB,2FAAgB;;;IAKrD,sFAAoD;IAAA,yEAAS;IAAA,kEAAM;IAAA,4DAAS;IAAC,4DAAkB;;;IAC/F,2EAAqC;IAAA,uDAAkB;IAAA,4DAAW;;;IAA7B,0DAAkB;IAAlB,6FAAkB;;;IAMvD,sFAAoD;IAAA,yEAAS;IAAA,qEAAS;IAAA,4DAAS;IAAC,4DAAkB;;;IAClG,2EAAqC;IAAA,uDAAqB;IAAA,4DAAW;;;IAAhC,0DAAqB;IAArB,gGAAqB;;;IAK1D,sFAAoD;IAAA,yEAAS;IAAA,0EAAc;IAAA,4DAAS;IAAC,4DAAkB;;;IACvG,2EAAqC;IAAA,uDAA0B;IAAA,4DAAW;;;IAArC,0DAA0B;IAA1B,qGAA0B;;;IAI/D,sFAAoD;IAAA,yEAAS;IAAA,uEAAW;IAAA,4DAAS;IAAC,4DAAkB;;;IACpG,2EAAqC;IAAA,uDAAuB;IAAA,4DAAW;;;IAAlC,0DAAuB;IAAvB,kGAAuB;;;IAK5D,sFAAoD;IAAA,yEAAS;IAAA,kEAAM;IAAA,4DAAS;IAAC,4DAAkB;;;IAC/F,2EAAqC;IAAA,uDAAkB;IAAA,4DAAW;;;IAA7B,0DAAkB;IAAlB,6FAAkB;;;IASvD,sFAAoD;IAAA,yEAAS;IAAA,mEAAO;IAAA,4DAAS;IAAC,4DAAkB;;;IAChG,2EAAqC;IAAA,uDAAmB;IAAA,4DAAW;;;IAA9B,0DAAmB;IAAnB,8FAAmB;;;IAIxD,kFAAoC;IAAA,yEAAS;IAAA,oEAAQ;IAAA,4DAAS;IAAC,4DAAkB;;;;IACjF,2EAEE;IAAA,6EAA2D;IAAtB,gWAAqB;IAAC,2EAAU;IAAA,+DAAI;IAAA,4DAAW;IAAA,4DAAS;IAC7F,6EAA8E;IAAxB,kWAAuB;IAAC,2EAAU;IAAA,iEAAM;IAAA,4DAAW;IAAA,4DAAS;IACpH,4DAAW;;;IAMb,4EAAqE;;;IACrE,qEAAoE;;;ADhFxE,IAAI,YAAY,GAAe,EAE9B,CAAC;AAYK,MAAM,gBAAgB;IAO3B,YAAY,OAAwB,EAAS,UAA4B,EAAQ,GAAe;QAAnD,eAAU,GAAV,UAAU,CAAkB;QAAQ,QAAG,GAAH,GAAG,CAAY;QALhG,qBAAgB,GAAa,CAAC,UAAU,EAAE,MAAM,EAAE,KAAK,EAAE,UAAU,EAAC,MAAM,EAAC,KAAK,EAAC,OAAO,EAAC,QAAQ,EAAC,eAAe,EAAC,OAAO,EAAC,YAAY,EAAC,QAAQ,CAAC,CAAC;QACjJ,eAAU,GAAE,IAAI,0EAAkB,CAAE,YAAY,CAAC,CAAC;QAKjC,WAAM,GAAC,IAAI,0DAAY,EAAE,CAAC;IADyD,CAAC;IAMrG,QAAQ;QAEN,YAAY,GAAC,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC;QACvC,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;QAE1B,IAAI,CAAC,SAAS,GAAC,IAAI,CAAC,UAAU,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,GAAG,EAAC,EAAE,GAClE,IAAG,GAAG,EAAC;YAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;SAAC,EAAC,CAC1B,CAAC;IAIJ,CAAC;IAED,WAAW;QACT,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC;IAC/B,CAAC;IACD,QAAQ;QACN,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC;QACjD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC,CAAC;QACvC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAC7B,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,CAAC;QACxB,IAAI,CAAC,UAAU,CAAC,IAAI,GAAC,IAAI,CAAC,IAAI,CAAC;QAC/B,IAAI,CAAC,UAAU,CAAC,SAAS,GAAC,IAAI,CAAC,SAAS,CAAC;IAG3C,CAAC;IACD,QAAQ,CAAC,GAAY;QAGnB,IAAI,CAAC,UAAU,CAAC,MAAM,GAAC,GAAG,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;IAClD,CAAC;IACD,MAAM,CAAC,GAAa;QAClB,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,+FAAsB,EAAC,EAAC,IAAI,EAAC,GAAG,EAAC,CAAC,CAAC;QAEjD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAGxB,CAAC;IACD,QAAQ,CAAC,GAAa;QACpB,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QAC7B,KAAK,CAAC,qBAAqB,CAAC,CAAC;QAC7B,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,CAAC;IAC1B,CAAC;;gFAvDU,gBAAgB;gGAAhB,gBAAgB;wEAIhB,gEAAQ;kEAKR,8DAAO;kEACP,wEAAY;;;;;;;QCtCzB,yEACA;QAAA,oFACE;QAAA,2EAEA;QAFO,6IAAS,iCAA6B,IAAC;QAA9C,4DAEA;QAAA,4DAAiB;QAEnB,kFACI;QACA,mEAEA;QAAA,2EACE;QAAA,oIAAmD;QACnD,sHAAqC;QACvC,qEAAe;QAGf,2EACE;QAAA,sIAAoD;QACpD,wHAAqC;QACvC,qEAAe;QAGf,6EACE;QAAA,sIAAoD;QACpD,wHAAqC;QACvC,qEAAe;QAGf,6EACE;QAAA,sIAAoD;QACpD,wHAAqC;QACvC,qEAAe;QAKf,6EACE;QAAA,sIAAoD;QACpD,wHAAqC;QACvC,qEAAe;QAGf,6EACE;QAAA,sIAAoD;QACpD,wHAAqC;QACvC,qEAAe;QAIf,6EACE;QAAA,sIAAoD;QACpD,wHAAqC;QACvC,qEAAe;QAGf,6EACE;QAAA,sIAAoD;QACpD,wHAAqC;QACvC,qEAAe;QAEf,6EACE;QAAA,sIAAoD;QACpD,wHAAqC;QACvC,qEAAe;QAGf,6EACE;QAAA,sIAAoD;QACpD,wHAAqC;QACvC,qEAAe;QAOf,6EACE;QAAA,sIAAoD;QACpD,wHAAqC;QACvC,qEAAe;QAEf,6EACE;QAAA,uIAAoC;QACpC,wHAEE;QAIJ,qEAAe;QAIf,qIAAoD;QACpD,uHAA0D;QAG5D,4DAAY;QAKd,gFAAiF;QAEjF,4DAAM;;QAlGK,0DAAyB;QAAzB,sFAAyB;QAuFhB,2DAAmC;QAAnC,iGAAmC;QAC1C,0DAAgD;QAAhD,kGAAgD;QAQ9C,0DAA2B;QAA3B,kJAA2B;;6FD1E7B,gBAAgB;cAL5B,uDAAS;eAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,WAAW,EAAE,2BAA2B;gBACxC,SAAS,EAAE,CAAC,0BAA0B,CAAC;aACxC;;kBAKE,uDAAS;mBAAC,gEAAQ,EAAC,EAAC,MAAM,EAAC,IAAI,EAAC;;kBAIhC,oDAAM;;kBACN,uDAAS;mBAAC,8DAAO;;kBACjB,uDAAS;mBAAC,wEAAY;;;;;;;;;;;;;;AEtCzB;AAAA;AAAO,MAAM,IAAI;IACb,YAEW,KAAc,EACd,QAAiB,EACjB,SAAiB,EACjB,MAAc,EACd,MAAe;QAJf,UAAK,GAAL,KAAK,CAAS;QACd,aAAQ,GAAR,QAAQ,CAAS;QACjB,cAAS,GAAT,SAAS,CAAQ;QACjB,WAAM,GAAN,MAAM,CAAQ;QACd,WAAM,GAAN,MAAM,CAAS;IAExB,CAAC;CAAC;;;;;;;;;;;;;ACTR;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { IndxpComponent } from './indxp/indxp.component';\nimport { FormOneComponent } from './form-one/form-one.component';\nimport { FormTwoComponent } from './form-two/form-two.component';\nimport { NewFormComponent } from './new-form/new-form.component';\n\n\n\n\nconst routes: Routes = [\n  {path:'',redirectTo:'index',pathMatch:'full'},\n{path:'index',component:IndxpComponent},\n{path:'formone',component:FormOneComponent},\n{path:'formtwo',component:FormTwoComponent},\n{path:'new',component:NewFormComponent}\n\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\nexport const routingComponents=[IndxpComponent]","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'my-app';\n}\n","<link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css\" integrity=\"sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh\" crossorigin=\"anonymous\">\n<script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js\" integrity=\"sha384-wfSDF2E50Y2D1uUdj0O3uMBJnjuUD4Ih7YwaYd1iqfktj0Uod8GCExl3Og8ifwB6\" crossorigin=\"anonymous\"></script>\n\n\n\n<div id=\"new\" class=\"routerComp\" ><router-outlet #myOutlet=outlet></router-outlet></div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule, routingComponents } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport {FormsModule, ReactiveFormsModule}from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport{MatSliderModule,} from '@angular/material/slider';\nimport{MatTreeModule}from '@angular/material/tree';\nimport{MatToolbarModule}from '@angular/material/toolbar';\nimport { FormOneComponent } from './form-one/form-one.component';\nimport { FormTwoComponent } from './form-two/form-two.component';\nimport{MatFormFieldModule,} from '@angular/material/form-field';\nimport{MatInputModule} from '@angular/material/input';\nimport{MatSelectModule} from '@angular/material/select';\nimport { NewFormComponent } from './new-form/new-form.component';\nimport { MatDatepickerModule ,} from \"@angular/material/datepicker\";\nimport{MatRadioModule} from \"@angular/material/radio\";\nimport { MatNativeDateModule } from '@angular/material/core';\nimport {MatTableModule  } from \"@angular/material/table\";\nimport { FormServeService } from './form-serve.service';\nimport{MatDialogModule} from '@angular/material/dialog';\nimport { EditComponentComponent } from './edit-component/edit-component.component';\nimport {  MatSortModule } from '@angular/material/sort';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatButtonModule } from '@angular/material/button';\nimport{MatIconModule} from '@angular/material/icon'\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    routingComponents,\n    FormOneComponent,\n    FormTwoComponent,\n    NewFormComponent,\n    EditComponentComponent,\n \n    \n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    MatSliderModule,\n    FormsModule,\n    MatToolbarModule,\n    MatTreeModule,\n    MatFormFieldModule,\n    MatInputModule,    \n    MatSelectModule,\n    BrowserAnimationsModule,\n    ReactiveFormsModule,\n    MatDatepickerModule,\n    MatRadioModule,\n    MatNativeDateModule,\n    MatTableModule,\n    MatDialogModule,\n    MatSortModule,\n    MatPaginatorModule,\n    MatButtonModule,\n    MatIconModule,\n    \n  ],\n  providers: [FormServeService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, Injector, Inject } from '@angular/core';\nimport { FormBuilder, FormGroup, FormArray, Validators } from '@angular/forms';\nimport { FormServeService ,Expertise,UserForm} from '../form-serve.service';import{MAT_DIALOG_DATA} from '@angular/material/dialog'\n\n\n@Component({\n  selector: 'app-edit-component',\n  templateUrl: './edit-component.component.html',\n  styleUrls: ['./edit-component.component.css']\n})\nexport class EditComponentComponent implements OnInit {\n\n  constructor(private fb : FormBuilder,private ex_service : FormServeService,@Inject(MAT_DIALOG_DATA) public data :any) { }\n\n  ngOnInit(): void {\n    this.myform.setValue(this.data);\n  }\n\ntoggle=false;\n  myform=this.fb.group({\n    name:[\"\",[Validators.required,Validators.minLength(4)]],\n    position:[],\n    age:[\"\",[Validators.required,Validators.max(100),]],\n    location:[\"\",[Validators.required,Validators.minLength(3)]],\n    adar:[\"\",[Validators.required,Validators.minLength(12)]],\n    email:[\"\",[Validators.required,Validators.email]],\n    pan:[\"\",[Validators.required,Validators.minLength(8)]],\n    gender:[\"\",],\n   \n    qualification:[\"\",[Validators.required]],\n    university:[\"\",[Validators.required,Validators.minLength(4)]],\n    about:[\"\",[Validators.required,Validators.minLength(15)]],\n    expertise:this.fb.array([\n     this.addExp()\n     \n    ]),\n    \n  })\n  \n\n  addExp (): FormGroup{\n    return this.fb.group({\n      exname:[\"\",[Validators.required]],\n      sdate:[\"\",[Validators.required]],\n      edate:[\"\",[Validators.required]],\n      nxp:[]\n     })\n   };\n   get expertise() {\n    this.calcDate();\n    return this.myform.get('expertise') as FormArray;\n  }\n  onClick(){\n\n    this.expertise.push(this.addExp());\n  }\n  calcDate(){\n    let wArr=this.myform.controls['expertise'].value;\n    for (let index = 0; index < wArr.length; index++) {\n      let edate=new Date(wArr[index].edate);\n    \n    let sdate=new Date(wArr[index].sdate);\n   \n    let yeardiff=edate.getFullYear()-sdate.getFullYear();\n    \n    wArr[index].nxp=yeardiff;\n    \n      \n    }\n    \n    this.myform.controls['expertise'].patchValue(wArr);\n    \n  }\n  onResset(){\n    this.myform.reset;\n\n  }\n  onEdit(){\n    this.ex_service.editData({name:this.myform.value.name\n      ,position:this.myform.value.position,\n      age:this.myform.value.age,\n      location:this.myform.value.location,\n      adar:this.myform.value.adar,\n      email:this.myform.value.email,\n      gender:this.myform.value.gender,\n      pan:this.myform.value.pan,\n      qualification:this.myform.value.qualification,\n      about:this.myform.value.about,\n      university:this.myform.value.university,\n      expertise:this.myform.value.expertise});\n\n      this.toggle=true;\n      this.ex_service.reloadTab({name:\"Asset\"});\n\n  }\n\n}\n","\n    <form [formGroup]=\"myform\" class=\"outerDiv\">\n<div [hidden]=\"toggle\" class=\"split left\">\n            <div class=\"leftDiv\">\n<mat-form-field>\n    <mat-label>Name</mat-label>\n<input required formControlName=\"name\" matInput type=\"text\"  >\n<mat-error  >Name is required and must be aleast 4 characters</mat-error>\n\n</mat-form-field>\n<br>\n\n<mat-form-field>\n    <mat-label>Email</mat-label>\n<input required formControlName=\"email\" matInput type=\"email\" >\n<mat-error  >Email is required and Must be a valid one</mat-error>\n\n</mat-form-field>\n<br>\n\n<mat-form-field>\n    <mat-label>Age</mat-label>\n<input required formControlName=\"age\" matInput type=\"number\" >\n<mat-error  > Age is Required and cannot be greater than 100</mat-error>\n\n</mat-form-field>\n<br>\n<mat-form-field>\n    <mat-label>Location</mat-label>\n<input required formControlName=\"location\" matInput type=\"text\" >\n<mat-error  >Location is required and must be atleast 3 characters</mat-error>\n\n</mat-form-field>\n<br>\n<div>\n<mat-radio-group  required formControlName=\"gender\">\n    <mat-label>gender</mat-label>\n    <mat-radio-button value=\"male\">Male</mat-radio-button>\n    <mat-radio-button value=\"Female\">female</mat-radio-button>\n</mat-radio-group>\n</div>\n   \n\n<br>\n<mat-form-field>\n    <mat-label>Aadhar number</mat-label>\n<input required formControlName=\"adar\" matInput type=\"number\" >\n<mat-error  >Aadhar is required and  must be a valid one.</mat-error>\n\n</mat-form-field>\n<br>\n\n<mat-form-field>\n    <mat-label>PAN number</mat-label>\n<input required formControlName=\"pan\" matInput type=\"text\" >\n<mat-error  >PAN is required and must be a valid one.</mat-error>\n\n</mat-form-field>\n</div>\n<div class=\"rightDiv\">\n\n<mat-form-field>\n    <mat-label>Qualification</mat-label>\n        <mat-select required formControlName=\"qualification\" multiple>      \n       \n        <mat-option value=\"ME\">ME</mat-option>\n        <mat-option value=\"BE\">BE</mat-option>\n        <mat-option value=\"MBA\">MBA</mat-option>\n           \n        <mat-error  >Qualification is required , Please select a valid one.</mat-error>\n      \n    \n       </mat-select>\n    </mat-form-field>\n    <br>\n\n    <mat-form-field>\n        <mat-label>University</mat-label>\n     <input required formControlName=\"university\" matInput type=\"text\" name=\"\" id=\"\">\n     <mat-error  >University is required and a valid one.</mat-error>\n   \n    </mat-form-field>\n    <br>\n<mat-form-field>\n    <mat-label>About Your Self</mat-label>\n    <textarea required formControlName=\"about\" matInput type=\"text\" name=\"\" id=\"\"></textarea>\n    <mat-error  >About your self is required and must be atleast 3 words.</mat-error>\n\n</mat-form-field>\n\n<br>\n<div formArrayName=\"expertise\">\n   \n    <div *ngFor=\"let ex of expertise.controls let i =index\" [formGroupName]=\"i\" >\n    <mat-form-field  >\n        <mat-label>Expertise {{i+1}}</mat-label>\n        \n        \n       <mat-select required  formControlName=\"exname\" >      \n        <mat-option>None</mat-option>\n        <mat-option value=\"Java\">Java</mat-option>\n        <mat-option value=\"Angular\">Angular</mat-option>\n        <mat-option value=\"NodeJS\">NodeJS</mat-option>\n        <mat-option value=\"ReactJS\">ReactJS</mat-option>    \n    \n    \n       </mat-select>\n       <mat-error  >Expertise is required and a valid one.</mat-error>\n      \n\n      \n    </mat-form-field><br>\n    <mat-form-field appearance=\"\">\n        <mat-label>Choose a Start date</mat-label>\n        <input matInput [matDatepicker]=\"picker\"  required  formControlName=\"sdate\" >\n        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n        <mat-datepicker #picker></mat-datepicker>\n        <mat-error  >Start date must be valid one.</mat-error>\n      \n      </mat-form-field>\n      <mat-form-field appearance=\"\">\n        <mat-label>Choose a End date</mat-label>\n        <input matInput [matDatepicker]=\"epicker\"  required  formControlName=\"edate\"  >\n        <mat-datepicker-toggle matSuffix [for]=\"epicker\"></mat-datepicker-toggle>\n        <mat-datepicker #epicker></mat-datepicker>\n        <mat-error  >End date must be valid one.</mat-error>\n      \n      </mat-form-field>\n     \n     <mat-form-field><mat-label>No of Years of Expertise</mat-label>\n         <input formControlName=\"nxp\" matInput type=\"number\">\n     </mat-form-field><br>\n      \n</div> <button (click)=\"onClick()\">Add Expertise</button><br>\n\n\n</div>\n      \n    </div>\n\n    <br><br>\n    <button mat-raised-button color=\"warn\" type=\"reset\" (click)=\"onResset()\">Reset</button>\n    <br><br>\n    <button mat-raised-button color=\"accent\" (click)=\"onEdit()\">    Submit    </button>\n\n\n\n\n</div>\n<div  [hidden]=\"!toggle\" style=\"text-align: center; padding-top: 150px;\"><h1>Form was Submitted sucessfully </h1>\n<h2>press ESC to continue...</h2></div>\n</form>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, Validators, FormGroupDirective, NgForm } from \"@angular/forms\";\nimport { Expertise,UserForm,FormServeService } from '../form-serve.service';\nimport { Subscription } from 'rxjs';\n\n\n@Component({\n  selector: 'app-form-one',\n  templateUrl: './form-one.component.html',\n  styleUrls: ['./form-one.component.css']\n})\nexport class FormOneComponent implements OnInit {\n\n  private count=0;\n  @ViewChild('formDirective') private formDirective : NgForm;\n\n  constructor(private fb : FormBuilder,private ex_service : FormServeService) { }\n\n  ngOnInit(): void {\n    \n  }\nmyformone=this.fb.group({\n  name:[\"\",[Validators.required,Validators.minLength(4)]],\n  position:[],\n  age:[\"\",[Validators.required,Validators.max(100),]],\n  location:[\"\",[Validators.required,Validators.minLength(3)]],\n  adar:[\"\",[Validators.required,Validators.minLength(12)]],\n  email:[\"\",[Validators.required,Validators.email]],\n  pan:[\"\",[Validators.required,Validators.minLength(8)]],\n  gender:[\"\",]\n})\n\n\nget name(){\n  return this.myformone.value.name;\n}\nget position(){\n  return this.myformone.value.position;\n}\nget age(){\n  return this.myformone.value.age;\n}\nget location(){\n  return this.myformone.value.location;\n}\nget adar(){\n  return this.myformone.value.adar;\n}\nget email(){\n  return this.myformone.value.email;\n}\nget pan(){\n  return this.myformone.value.pan;\n}\nget gender(){\n  return this.myformone.value.gender;\n}\n\npublic myformtw :FormTwo;\npublic wForm :UserForm;\npublic oform:FormOne;\n\nonResset(){\n  \n  this.myformone.reset();\n  this.formDirective.resetForm();\nthis.myformone.clearAsyncValidators();\n  this.myformone.markAsUntouched;\n  this.myformone.markAsPristine;\n  this.myformone.clearValidators();\n}\nonSubmitt(myvara : FormTwo){\n  this.oform=this.myformone.value;\n  \n  this.oform.position=this.count++;\n  \n  this.ex_service.addData({name:this.oform.name\n                          ,position:this.oform.position,\n                          age:this.oform.age,\n                          location:this.oform.location,\n                          adar:this.oform.adar,\n                          email:this.oform.email,\n                          gender:this.oform.gender,\n                          pan:this.oform.pan,\n                          qualification:myvara.qualification,\n                          about:myvara.about,\n                          university:myvara.university,\n                          expertise:myvara.expertise});\n\n                          alert(\"Form Submitted Sucessfully\");\n\n  this.onResset();\n  this.ex_service.reloadTab({opt:\"Sucessfully reloaded table\"});\n}\nonEdit(row :UserForm){\n\n  this.myformone.patchValue({name:row.name,position:row.position,age:row.age,location:row.location,adar:row.adar,email:row.email,gender:row.gender,pan:row.pan});\n  this.myformtw={qualification:row.qualification,about:row.about,university:row.university,expertise:row.expertise};\n  this.ex_service.notifyChild({qualification:row.qualification,about:row.about,university:row.university,expertise:row.expertise});\n}\n\n\n}\n\n\n\nexport interface FormTwo{\n\n  qualification:string[];\n  university:string;\n  about:string;\n  expertise:Expertise[];\n\n\n\n}\nexport interface FormOne{\n  name:string,\n  position:number,\n  age:number,\n  location:string,\n  adar:number,\n  email:string,\n  pan:string,\n  gender:string\n}\n\n","<div class=\"split\">\n    <br>\n    <br>\n    <br>\n<div class=\"container\" >\n \n    <form [formGroup]=\"myformone\" #formDirective=\"ngForm\">\n        <article>\n        <div class=\"left\">\n<mat-form-field>\n    <mat-label>Name</mat-label>\n<input  formControlName=\"name\" matInput type=\"text\"  >\n<mat-error  >Name is required and must be aleast 4 characters</mat-error>\n\n</mat-form-field>\n<br>\n \n<mat-form-field>\n    <mat-label>Email</mat-label>\n<input  formControlName=\"email\" matInput type=\"email\" >\n<mat-error  >Email is required and Must be a valid one</mat-error>\n</mat-form-field>\n\n\n<mat-form-field>\n    <mat-label>Age</mat-label>\n<input  formControlName=\"age\" matInput type=\"number\" >\n<mat-error  > Age is Required and cannot be greater than 100</mat-error>\n\n</mat-form-field>\n\n<mat-form-field>\n    <mat-label>Location</mat-label>\n<input  formControlName=\"location\" matInput type=\"text\" >\n<mat-error  >Location is required and must be atleast 3 characters</mat-error>\n</mat-form-field>\n\n<div>\n<mat-radio-group   formControlName=\"gender\">\n    <mat-label>gender</mat-label>\n    <mat-radio-button value=\"male\">Male</mat-radio-button>\n    <mat-radio-button value=\"Female\">female</mat-radio-button>\n </mat-radio-group>\n</div>\n   \n\n<br>\n<mat-form-field>\n    <mat-label>Aadhar number</mat-label>\n<input  formControlName=\"adar\" matInput type=\"number\" >\n<mat-error  >Aadhar is required and  must be a valid one.</mat-error>\n</mat-form-field>\n\n\n<mat-form-field>\n    <mat-label>PAN number</mat-label>\n<input  formControlName=\"pan\" matInput type=\"text\" >\n<mat-error  >PAN is required and must be a valid one.</mat-error>\n\n</mat-form-field>\n\n</div>\n        </article><article>\n<aside class=\"reright\">\n<app-form-two (childev)=\"onResset()\"(subev)=\"onSubmitt($event)\"> hi </app-form-two>\n</aside>\n\n</article></form>\n\n\n\n\n\n</div>\n<br><br><br><br>\n<div class=\"tab\"><app-new-form (manaev)=\"onEdit($event)\"></app-new-form>\n    </div>\n\n\n</div>","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { FormTwo } from './form-one/form-one.component';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class FormServeService {\n\n  constructor() { }\n  d1=new Date();\n  d2=new Date();\n\n\n   static ulist: UserForm[]=[] ;\n  /**\n   * name\n   */\n  \n  public getData():UserForm[] {\n    console.log(FormServeService.ulist);\n    return FormServeService.ulist;\n    \n  }\n  \n  public editData(usr : UserForm,){\n    for (let index = 0; index < FormServeService.ulist.length; index++) {\n      if (usr.position==FormServeService.ulist[index].position){\n        FormServeService.ulist[index]=usr;\n      }\n\n   \n  }}\n   public addData(usr :UserForm){\n    console.log(usr);\n    FormServeService.ulist[usr.position]=usr;\n    console.log(FormServeService.ulist);\n  }\n  public delData(usr : UserForm){\n    for (let index = 0; index < FormServeService.ulist.length; index++) {\n      if (usr.name==FormServeService.ulist[index].name){\n        FormServeService.ulist.splice(index,1);\n      }\n      \n    }\n       \n\n     \n\n  }\n  /**\n   * notifyChild\n   */\n  public notifyChild(row : FormTwo) {\n    if(row){\n      alert(row.about+row.expertise);\n      this.notify$.next(row)\n    }else{alert(\"Null\")}\n    \n  }\n  public reloadTab(row : any) {\n    if(row){\n      this.reload.next(row);\n    }\n    \n  }\n\n   notify$=new Subject<any>();\n   private reload =new Subject<any>();\n   reloadObsservable$=this.reload.asObservable();\n\n\n}\n\n\nexport interface UserForm {\n  name: string;\n  position: number;\n  age: number;\n  location: string;\n  adar:number;\n  email:string;\n  gender:string;\n  pan:string;\n  qualification:string[];\n  university:string;\n  about:string;\n  expertise:Expertise[];\n\n\n}\nexport interface Expertise{\n  exname:string;\n  sdate:Date;\n  edate:Date;\n  nxp:number;\n}","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { FormBuilder ,FormArray, FormGroup, FormControl, Validators} from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { FormServeService } from '../form-serve.service';\n\n\n@Component({\n  selector: 'app-form-two',\n  templateUrl: './form-two.component.html',\n  styleUrls: ['./form-two.component.css']\n})\nexport class FormTwoComponent implements OnInit {\n\n\n \n  @Output() public childev=new EventEmitter();\n  @Output() public subev=new EventEmitter();\n  \n  constructor(private fb:FormBuilder,private exserve :FormServeService) {\n    \n     }\n     private subs:Subscription;\n     public count=0;\n     myformtwo=this.fb.group({\n      qualification:[\"\",[Validators.required]],\n      university:[\"\",[Validators.required,Validators.minLength(4)]],\n      about:[\"\",[Validators.required,Validators.minLength(15)]],\n      expertise:this.fb.array([\n       this.addExp()\n       \n      ]),\n      \n      })\n      \n      \n      \n      public get qualification() {\n        return this.myformtwo.value.qualification;\n\n      }\n      public get university() {\n        return this.myformtwo.value.university;\n        \n      }\n      public get about() {\n        return this.myformtwo.value.about;\n        \n      }\n    \n      \n      \n      ngOnInit(): void {\n       this.subs= this.exserve.notify$.subscribe((res)=>{\n          this.myformtwo.patchValue=res;\n          console.log(res);\n        })\n        \n      }\n\n      onResset(){\n        this.myformtwo.reset();\n        this.childev.emit();\n        this.myformtwo.clearValidators();\n        \n        }\n\n        addExp (): FormGroup{\n          return this.fb.group({\n             exname:[\"\",[Validators.required]],\n             sdate:[\"\",[Validators.required]],\n             edate:[\"\",[Validators.required]],\n             nxp:[]\n           })\n         };\n         get expertise() {\n          this.calcDate();\n          return this.myformtwo.get('expertise') as FormArray;\n        }\n        onClick(){\n          \n          this.expertise.push(this.addExp());\n        }\n        \n        \n        calcDate(){\n          let wArr=this.myformtwo.controls['expertise'].value;\n          for (let index = 0; index < wArr.length; index++) {\n            let edate=new Date(wArr[index].edate);\n          \n          let sdate=new Date(wArr[index].sdate);\n         \n          let yeardiff=edate.getFullYear()-sdate.getFullYear();\n          this.count=yeardiff;\n          wArr[index].nxp=yeardiff;\n          \n            \n          }\n          \n          this.myformtwo.controls['expertise'].patchValue(wArr);\n          \n        }\n\n        onSubmitt(){\n          this.subev.emit(this.myformtwo.value);\n          this.myformtwo.reset();\n        }\n        \n\n     }\n\n\n\n\n","\n\n<div [formGroup]=\"myformtwo\">\n    \n    <mat-form-field>\n    <mat-label>Qualification</mat-label>\n        <mat-select required formControlName=\"qualification\" multiple>      \n       \n        <mat-option value=\"ME\">ME</mat-option>\n        <mat-option value=\"BE\">BE</mat-option>\n        <mat-option value=\"MBA\">MBA</mat-option>\n           \n    \n       \n       </mat-select>\n    </mat-form-field>\n    \n\n    <mat-form-field>\n        <mat-label>University</mat-label>\n     <input required formControlName=\"university\" matInput type=\"text\" name=\"\" id=\"\">\n     <mat-error  >University is required and a valid one.</mat-error>\n    </mat-form-field>\n    <br>\n<mat-form-field>\n    <mat-label>About Your Self</mat-label>\n    <textarea required formControlName=\"about\" matInput type=\"text\" name=\"\" id=\"\"></textarea>\n    <mat-error  >About your self is required and must be atleast 3 words.</mat-error>\n</mat-form-field>\n\n<br>\n<div formArrayName=\"expertise\">\n   \n    <div *ngFor=\"let ex of expertise.controls let i =index\" [formGroupName]=\"i\" >\n    <mat-form-field  >\n        <mat-label>Expertise {{i+1}}</mat-label>\n        \n        \n       <mat-select required  formControlName=\"exname\" >      \n        <mat-option>None</mat-option>\n        <mat-option value=\"Java\">Java</mat-option>\n        <mat-option value=\"Angular\">Angular</mat-option>\n        <mat-option value=\"NodeJS\">NodeJS</mat-option>\n        <mat-option value=\"ReactJS\">ReactJS</mat-option>    \n    \n    \n       </mat-select>\n       \n       <mat-error  >Expertise is required and a valid one.</mat-error>\n      \n    </mat-form-field>\n    <mat-form-field appearance=\"\">\n        <mat-label>Choose a Start date</mat-label>\n        <input matInput [matDatepicker]=\"picker\"  required  formControlName=\"sdate\" >\n        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n        <mat-datepicker #picker></mat-datepicker>\n        <mat-error  >Start date must be valid one.</mat-error>\n      </mat-form-field>\n      <mat-form-field appearance=\"\">\n        <mat-label>Choose a End date</mat-label>\n        <input matInput [matDatepicker]=\"epicker\"  required  formControlName=\"edate\"  >\n        <mat-datepicker-toggle matSuffix [for]=\"epicker\"></mat-datepicker-toggle>\n        <mat-datepicker #epicker></mat-datepicker>\n        <mat-error  >End date must be valid one.</mat-error>\n      </mat-form-field>\n     \n     <mat-form-field><mat-label>No of Years of Expertise</mat-label>\n         <input formControlName=\"nxp\" matInput type=\"number\">\n     </mat-form-field>\n     <button mat-raised-button color=\"primary\" (click)=\"onClick()\">Add Expertise</button>\n       \n      \n</div><br>\n\n\n   \n      \n    </div>\n<br><br>\n <button  style=\"float: left;\" mat-fab color=\"warn\" type=\"reset\" (click)=\"onResset()\"><mat-icon>cached</mat-icon></button>\n    \n    \n    <button [disabled]=\"!myformtwo.valid\" style=\"float: right;\" mat-fab color=\"accent\" (click)=\"onSubmitt()\"><mat-icon>done</mat-icon></button>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { User } from '../user';\n\n@Component({\n  selector: 'app-indxp',\n  templateUrl: './indxp.component.html',\n  styleUrls: ['./indxp.component.css']\n})\nexport class IndxpComponent implements OnInit {\n\n  genderarr=['Male','Female'];\n  vuser=new User(\"\",\"\",\"\",false,\"\");\n  constructor() { }\n\n  ngOnInit(): void {\n\n    console.log(\"Index Component Initialized\");\n  }\n  isDone() : boolean{\n    return !this.vuser.accept;\n  }\n\n  isSame() : boolean{\n    console.log(this.vuser.password);\n    console.log(this.vuser.cpassword);\n    if(this.vuser.password==this.vuser.cpassword){return false}else return true;\n  }\n  Submit():void{\n    alert(\"Form Successfully Submitted for ,\\n Email : \"+this.vuser.email+\",\\nPassword is : \"+this.vuser.password+\"\\nGender:\"+this.vuser.gender);\n  }\n  Cancel(){\n    location.reload();\n  }\n  isDef():boolean{\n    let x= this.vuser.gender;\n    if(x==\"\"){\n      return true;\n    }else return false;\n  \n  }\n\n}\n","<br><br><br>\n\n<div class=\"container\">\n<form action=\"\" #signup=\"ngForm\">\n    <h2>Sign-up</h2>\n    <div class=\"form-group\">\n        <label  >Email</label>\n            <input required #email='ngModel' pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$\" type=\"email\" name=\"email\" id= \"\" class=\"form-control\"\n            [class.is-invalid]=\"email.invalid && email.touched\" [(ngModel)]=\"vuser.email\">\n           <div *ngIf=\"email.errors && (email.invalid&&email.touched)\">\n            <small class=\"text-danger\" *ngIf=\"email.errors.pattern\">Please enter a Valid Email</small>\n            <small class=\"text-danger\" *ngIf=\"email.errors.required\">Email is a Mandatory Field</small>\n           </div>\n            \n    </div>\n\n    <div class=\"form-group\">\n        <label >Password :</label>\n            <input required #pwd=\"ngModel\"  pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\" type=\"password\" name=\"pwd\" id= \"\" class=\"form-control\"\n            [class.is-invalid]=\"pwd.invalid && pwd.touched\" [(ngModel)]=\"vuser.password\">\n            <div *ngIf=\"pwd.errors && (pwd.invalid&&pwd.touched)\">\n                <small class=\"text-danger\" *ngIf=\"pwd.errors.pattern\">Password Must contain mininum 8 characters with Alpha-Numeric and One special character</small>\n                <small class=\"text-danger\" *ngIf=\"pwd.errors.required\">Password is a Mandatory Field</small>\n               </div>\n    </div>\n    <div class=\"form-group\">\n        <label >Confirm Password :</label>\n            <input required #cpwd=\"ngModel\"  pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\" type=\"password\" name=\"cpwd\" id= \"\" class=\"form-control\"\n            [class.is-invalid]=\"cpwd.invalid && cpwd.touched \"  [(ngModel)]=\"vuser.cpassword\">\n            <div *ngIf=\"cpwd.errors && (cpwd.invalid&&cpwd.touched)\">\n                <small class=\"text-danger\" *ngIf=\"cpwd.errors.pattern\">Password Must contain mininum 8 characters with Alpha-Numeric and One special character</small>\n                <small class=\"text-danger\" *ngIf=\"cpwd.errors.required\">Password is a Mandatory Field</small>\n               </div>\n            <small class=\"text-danger\" *ngIf=\"isSame()&&cpwd.touched\">Passwords doesnot Match</small>\n    </div>\n\n    <div class=\"form-group\"><select #selg=\"ngModel\" required name=\"selg\" [class.is-invalid]=\"selg.errors&&selg.touched\" class=\"custom-select\" [(ngModel)]=\"vuser.gender\">\n        <label >Accept :</label>\n           <option selected value=\"\" >Please select your Gender</option>\n            <option value=\"Male\">Male</option>\n            <option value=\"Female\">Female</option>\n        </select>\n        <small *ngIf=\"selg.errors&&selg.touched\" class=\"text-danger\">Please Select a Valid Option</small>\n    </div>\n\n    <div class=\"form-check mb-3\">\n       \n            <input required #cxb=\"ngModel\" class=\"form-check-input\" type=\"checkbox\" name=\"cxb\" id= \"\" \n            \n            [class.is-invalid]=\"cxb.invalid && cxb.touched\" [(ngModel)]=\"vuser.accept\" >\n            <label class=\"form-check-label\" >Accept</label><br>\n            <small class=\"text-danger\" *ngIf=\"isDone()&&cxb.touched\" >(It is Mandatory to Accept)</small>\n    </div>\n    \n    <div class=\"btn-group\">\n     <button class=\"btn btn-danger\"  (click)=\"Cancel()\">Cancel</button>\n        <button [disabled]=\"signup.form.invalid\" class=\"btn btn-success\" (click)=\"Submit()\">Submit</button>\n    </div>\n    \n    \n  \n</form>\n</div>\n<a [routerLink]=\"['formone']\">Topic-Four</a>","import { Component, OnInit, ViewChild, EventEmitter, Output } from '@angular/core';\nimport { MaxLengthValidator } from '@angular/forms';\nimport { UserForm, FormServeService } from '../form-serve.service';\nimport { MatTable, MatTableDataSource} from '@angular/material/table';\nimport { MatDialog } from '@angular/material/dialog';\nimport { EditComponentComponent } from '../edit-component/edit-component.component';\nimport { Subscription } from 'rxjs';\nimport { MatSort } from '@angular/material/sort';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatIconRegistry } from \"@angular/material/icon\";\n\n\n\n\nlet ELEMENT_DATA: UserForm[] = [\n \n];\n\n\n\n\n\n\n@Component({\n  selector: 'app-new-form',\n  templateUrl: './new-form.component.html',\n  styleUrls: ['./new-form.component.css']\n})\nexport class NewFormComponent implements OnInit   {\n\n  displayedColumns: string[] = ['position', 'name', 'age', 'location','adar','pan','email','gender','qualification','about','university','action'];\n  dataSource =new MatTableDataSource( ELEMENT_DATA);\n  @ViewChild(MatTable,{static:true}) mytab:MatTable<any>;\n \n  private reloadSub:Subscription;\n  constructor(iconreg: MatIconRegistry,private ex_service :FormServeService,public dlg : MatDialog) { }\n  @Output() public manaev=new EventEmitter();\n  @ViewChild(MatSort) sort:MatSort;\n  @ViewChild(MatPaginator) paginator:MatPaginator;\n \n\n  ngOnInit(): void {\n \n    ELEMENT_DATA=this.ex_service.getData();\n    console.log(ELEMENT_DATA);\n   \n    this.reloadSub=this.ex_service.reloadObsservable$.subscribe((res)=>\n    {if(res){this.onReload();}}\n    );\n\n      \n   \n  }\n\n  ngOnDestroy(){\n    this.reloadSub.unsubscribe();\n  }\n  onReload(){\n    this.dataSource.data = this.ex_service.getData();\n    console.log(this.ex_service.getData());\n    console.log(this.dataSource);\n    this.mytab.renderRows();\n    this.dataSource.sort=this.sort;\n    this.dataSource.paginator=this.paginator;\n\n\n  }\n  onSearch(fil : string){\n\n\n    this.dataSource.filter=fil.trim().toLowerCase();\n  }\n  onEdit(row: UserForm){\n    this.dlg.open(EditComponentComponent,{data:row});\n\n    this.manaev.emit(row);\n\n\n  }\n  onDelete(row: UserForm){\n    this.ex_service.delData(row);\n    alert(\"deleted sucessfully\");\n    this.mytab.renderRows();\n  }\n\n}\n","<div class=\"ng-container\">\n<mat-form-field class=\"newm\">\n  <input (keyup)=\"onSearch($event.target.value)\" matInput placeholder=\"Search\">\n  \n  </mat-form-field>\n  \n<mat-table [dataSource]=\"dataSource\" matSort  #mytab >\n    <!-- Position Column -->\n    <hr style=\"background-color: black;\">\n    \n    <ng-container matColumnDef=\"position\">\n      <mat-header-cell mat-sort-header *matHeaderCellDef><strong> No. </strong></mat-header-cell>\n      <mat-cell *matCellDef=\"let element\"> {{element.position}} </mat-cell>\n    </ng-container>\n  \n    <!-- Name Column -->\n    <ng-container matColumnDef=\"name\">\n      <mat-header-cell mat-sort-header *matHeaderCellDef> <strong> Name </strong> </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\"> {{element.name}} </mat-cell>\n    </ng-container>\n  \n    <!-- Weight Column -->\n    <ng-container matColumnDef=\"age\">\n      <mat-header-cell mat-sort-header *matHeaderCellDef> <strong> Age </strong> </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\"> {{element.age}} </mat-cell>\n    </ng-container>\n  \n    <!-- Symbol Column -->\n    <ng-container matColumnDef=\"adar\">\n      <mat-header-cell mat-sort-header *matHeaderCellDef> <strong> Adar </strong> </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\"> {{element.adar}} </mat-cell>\n    </ng-container>\n  \n    \n  \n    <!-- Weight Column -->\n    <ng-container matColumnDef=\"pan\">\n      <mat-header-cell mat-sort-header *matHeaderCellDef> <strong> Pan </strong> </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\"> {{element.pan}} </mat-cell>\n    </ng-container>\n  \n    <!-- Symbol Column -->\n    <ng-container matColumnDef=\"email\">\n      <mat-header-cell mat-sort-header *matHeaderCellDef> <strong> Email </strong> </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\"> {{element.email}} </mat-cell>\n    </ng-container>\n  \n  \n    <!-- Weight Column -->\n    <ng-container matColumnDef=\"location\">\n      <mat-header-cell mat-sort-header *matHeaderCellDef> <strong> Location </strong> </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\"> {{element.location}} </mat-cell>\n    </ng-container>\n  \n    <!-- Symbol Column -->\n    <ng-container matColumnDef=\"qualification\">\n      <mat-header-cell mat-sort-header *matHeaderCellDef> <strong> Qualification </strong> </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\"> {{element.qualification}} </mat-cell>\n    </ng-container>\n  \n    <ng-container matColumnDef=\"university\">\n      <mat-header-cell mat-sort-header *matHeaderCellDef> <strong> University </strong> </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\"> {{element.university}} </mat-cell>\n    </ng-container>\n  \n    <!-- Symbol Column -->\n    <ng-container matColumnDef=\"about\">\n      <mat-header-cell mat-sort-header *matHeaderCellDef> <strong> About </strong> </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\"> {{element.about}} </mat-cell>\n    </ng-container>\n  \n  \n    <!-- Weight Column -->\n    \n  \n    <!-- Symbol Column -->\n    <ng-container matColumnDef=\"gender\">\n      <mat-header-cell mat-sort-header *matHeaderCellDef> <strong> Gender </strong> </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\"> {{element.gender}} </mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"action\">\n      <mat-header-cell *matHeaderCellDef> <strong> Actions </strong> </mat-header-cell>\n      <mat-cell *matCellDef=\"let row\">\n        \n        <button mat-mini-fab color=\"primary\" (click)=\"onEdit(row)\"><mat-icon>edit</mat-icon></button> \n        <button mat-mini-fab color=\"warn\" aria-hidden='false' (click)=\"onDelete(row)\"><mat-icon>delete</mat-icon></button> \n      </mat-cell>\n      \n    </ng-container>\n    \n    \n\n    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n    <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\n\n   \n  </mat-table>\n  \n\n\n\n<mat-paginator [pageSizeOptions]=\"[2,3,5]\" showFirstLastButtons ></mat-paginator>\n\n</div>","export class User {\n    constructor(\n\n        public email : string,\n        public password : string,\n        public cpassword :string,\n        public accept:boolean,\n        public gender : string\n\n    ){}}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}