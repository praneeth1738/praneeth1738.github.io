{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/edit-component/edit-component.component.ts","webpack:///src/app/edit-component/edit-component.component.html","webpack:///src/app/form-one/form-one.component.ts","webpack:///src/app/form-one/form-one.component.html","webpack:///src/app/form-serve.service.ts","webpack:///src/app/form-two/form-two.component.ts","webpack:///src/app/form-two/form-two.component.html","webpack:///src/app/indxp/indxp.component.ts","webpack:///src/app/indxp/indxp.component.html","webpack:///src/app/new-form/new-form.component.ts","webpack:///src/app/new-form/new-form.component.html","webpack:///src/app/user.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","component","AppRoutingModule","forRoot","imports","routingComponents","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","EditComponentComponent","fb","ex_service","data","toggle","myform","group","name","required","minLength","position","age","max","location","adar","email","pan","gender","qualification","university","about","expertise","array","addExp","setValue","exname","sdate","edate","nxp","push","wArr","controls","value","index","length","Date","yeardiff","getFullYear","patchValue","reset","editData","reloadTab","calcDate","get","onClick","onResset","onEdit","FormOneComponent","count","myformone","formDirective","resetForm","clearAsyncValidators","markAsUntouched","markAsPristine","clearValidators","myvara","oform","addData","alert","opt","row","myformtw","notifyChild","onSubmitt","FormServeService","d1","d2","notify$","reload","reloadObsservable$","asObservable","console","log","ulist","usr","splice","next","providedIn","FormTwoComponent","exserve","childev","subev","myformtwo","subs","subscribe","res","emit","IndxpComponent","genderarr","vuser","accept","password","cpassword","x","Cancel","Submit","ELEMENT_DATA","NewFormComponent","iconreg","dlg","displayedColumns","dataSource","manaev","getData","reloadSub","onReload","unsubscribe","mytab","renderRows","sort","paginator","fil","filter","trim","toLowerCase","open","delData","onSearch","User","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { IndxpComponent } from './indxp/indxp.component';\nimport { FormOneComponent } from './form-one/form-one.component';\nimport { FormTwoComponent } from './form-two/form-two.component';\nimport { NewFormComponent } from './new-form/new-form.component';\n\n\n\n\nconst routes: Routes = [\n  {path:'',redirectTo:'index',pathMatch:'full'},\n{path:'index',component:IndxpComponent},\n{path:'formone',component:FormOneComponent},\n{path:'formtwo',component:FormTwoComponent},\n{path:'new',component:NewFormComponent}\n\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\nexport const routingComponents=[IndxpComponent]","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'my-app';\n}\n","<link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css\" integrity=\"sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh\" crossorigin=\"anonymous\">\n<script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js\" integrity=\"sha384-wfSDF2E50Y2D1uUdj0O3uMBJnjuUD4Ih7YwaYd1iqfktj0Uod8GCExl3Og8ifwB6\" crossorigin=\"anonymous\"></script>\n\n\n\n<div id=\"new\" class=\"routerComp\" ><router-outlet #myOutlet=outlet></router-outlet></div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule, routingComponents } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport {FormsModule, ReactiveFormsModule}from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport{MatSliderModule,} from '@angular/material/slider';\nimport{MatTreeModule}from '@angular/material/tree';\nimport{MatToolbarModule}from '@angular/material/toolbar';\nimport { FormOneComponent } from './form-one/form-one.component';\nimport { FormTwoComponent } from './form-two/form-two.component';\nimport{MatFormFieldModule,} from '@angular/material/form-field';\nimport{MatInputModule} from '@angular/material/input';\nimport{MatSelectModule} from '@angular/material/select';\nimport { NewFormComponent } from './new-form/new-form.component';\nimport { MatDatepickerModule ,} from \"@angular/material/datepicker\";\nimport{MatRadioModule} from \"@angular/material/radio\";\nimport { MatNativeDateModule } from '@angular/material/core';\nimport {MatTableModule  } from \"@angular/material/table\";\nimport { FormServeService } from './form-serve.service';\nimport{MatDialogModule} from '@angular/material/dialog';\nimport { EditComponentComponent } from './edit-component/edit-component.component';\nimport {  MatSortModule } from '@angular/material/sort';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatButtonModule } from '@angular/material/button';\nimport{MatIconModule} from '@angular/material/icon'\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    routingComponents,\n    FormOneComponent,\n    FormTwoComponent,\n    NewFormComponent,\n    EditComponentComponent,\n \n    \n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    MatSliderModule,\n    FormsModule,\n    MatToolbarModule,\n    MatTreeModule,\n    MatFormFieldModule,\n    MatInputModule,    \n    MatSelectModule,\n    BrowserAnimationsModule,\n    ReactiveFormsModule,\n    MatDatepickerModule,\n    MatRadioModule,\n    MatNativeDateModule,\n    MatTableModule,\n    MatDialogModule,\n    MatSortModule,\n    MatPaginatorModule,\n    MatButtonModule,\n    MatIconModule,\n    \n  ],\n  providers: [FormServeService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, Injector, Inject } from '@angular/core';\nimport { FormBuilder, FormGroup, FormArray, Validators } from '@angular/forms';\nimport { FormServeService ,Expertise,UserForm} from '../form-serve.service';import{MAT_DIALOG_DATA} from '@angular/material/dialog'\n\n\n@Component({\n  selector: 'app-edit-component',\n  templateUrl: './edit-component.component.html',\n  styleUrls: ['./edit-component.component.css']\n})\nexport class EditComponentComponent implements OnInit {\n\n  constructor(private fb : FormBuilder,private ex_service : FormServeService,@Inject(MAT_DIALOG_DATA) public data :any) { }\n\n  ngOnInit(): void {\n    this.myform.setValue(this.data);\n  }\n\ntoggle=false;\n  myform=this.fb.group({\n    name:[\"\",[Validators.required,Validators.minLength(4)]],\n    position:[],\n    age:[\"\",[Validators.required,Validators.max(100),]],\n    location:[\"\",[Validators.required,Validators.minLength(3)]],\n    adar:[\"\",[Validators.required,Validators.minLength(12)]],\n    email:[\"\",[Validators.required,Validators.email]],\n    pan:[\"\",[Validators.required,Validators.minLength(8)]],\n    gender:[\"\",],\n   \n    qualification:[\"\",[Validators.required]],\n    university:[\"\",[Validators.required,Validators.minLength(4)]],\n    about:[\"\",[Validators.required,Validators.minLength(15)]],\n    expertise:this.fb.array([\n     this.addExp()\n     \n    ]),\n    \n  })\n  \n\n  addExp (): FormGroup{\n    return this.fb.group({\n      exname:[\"\",[Validators.required]],\n      sdate:[\"\",[Validators.required]],\n      edate:[\"\",[Validators.required]],\n      nxp:[]\n     })\n   };\n   get expertise() {\n    this.calcDate();\n    return this.myform.get('expertise') as FormArray;\n  }\n  onClick(){\n\n    this.expertise.push(this.addExp());\n  }\n  calcDate(){\n    let wArr=this.myform.controls['expertise'].value;\n    for (let index = 0; index < wArr.length; index++) {\n      let edate=new Date(wArr[index].edate);\n    \n    let sdate=new Date(wArr[index].sdate);\n   \n    let yeardiff=edate.getFullYear()-sdate.getFullYear();\n    \n    wArr[index].nxp=yeardiff;\n    \n      \n    }\n    \n    this.myform.controls['expertise'].patchValue(wArr);\n    \n  }\n  onResset(){\n    this.myform.reset;\n\n  }\n  onEdit(){\n    this.ex_service.editData({name:this.myform.value.name\n      ,position:this.myform.value.position,\n      age:this.myform.value.age,\n      location:this.myform.value.location,\n      adar:this.myform.value.adar,\n      email:this.myform.value.email,\n      gender:this.myform.value.gender,\n      pan:this.myform.value.pan,\n      qualification:this.myform.value.qualification,\n      about:this.myform.value.about,\n      university:this.myform.value.university,\n      expertise:this.myform.value.expertise});\n\n      this.toggle=true;\n      this.ex_service.reloadTab({name:\"Asset\"});\n\n  }\n\n}\n","\n    <form [formGroup]=\"myform\" class=\"outerDiv\">\n<div [hidden]=\"toggle\" class=\"split left\">\n            <div class=\"leftDiv\">\n<mat-form-field>\n    <mat-label>Name</mat-label>\n<input required formControlName=\"name\" matInput type=\"text\"  >\n<mat-error  >Name is required and must be aleast 4 characters</mat-error>\n\n</mat-form-field>\n<br>\n\n<mat-form-field>\n    <mat-label>Email</mat-label>\n<input required formControlName=\"email\" matInput type=\"email\" >\n<mat-error  >Email is required and Must be a valid one</mat-error>\n\n</mat-form-field>\n<br>\n\n<mat-form-field>\n    <mat-label>Age</mat-label>\n<input required formControlName=\"age\" matInput type=\"number\" >\n<mat-error  > Age is Required and cannot be greater than 100</mat-error>\n\n</mat-form-field>\n<br>\n<mat-form-field>\n    <mat-label>Location</mat-label>\n<input required formControlName=\"location\" matInput type=\"text\" >\n<mat-error  >Location is required and must be atleast 3 characters</mat-error>\n\n</mat-form-field>\n<br>\n<div>\n<mat-radio-group  required formControlName=\"gender\">\n    <mat-label>gender</mat-label>\n    <mat-radio-button value=\"male\">Male</mat-radio-button>\n    <mat-radio-button value=\"Female\">female</mat-radio-button>\n</mat-radio-group>\n</div>\n   \n\n<br>\n<mat-form-field>\n    <mat-label>Aadhar number</mat-label>\n<input required formControlName=\"adar\" matInput type=\"number\" >\n<mat-error  >Aadhar is required and  must be a valid one.</mat-error>\n\n</mat-form-field>\n<br>\n\n<mat-form-field>\n    <mat-label>PAN number</mat-label>\n<input required formControlName=\"pan\" matInput type=\"text\" >\n<mat-error  >PAN is required and must be a valid one.</mat-error>\n\n</mat-form-field>\n</div>\n<div class=\"rightDiv\">\n\n<mat-form-field>\n    <mat-label>Qualification</mat-label>\n        <mat-select required formControlName=\"qualification\" multiple>      \n       \n        <mat-option value=\"ME\">ME</mat-option>\n        <mat-option value=\"BE\">BE</mat-option>\n        <mat-option value=\"MBA\">MBA</mat-option>\n           \n        <mat-error  >Qualification is required , Please select a valid one.</mat-error>\n      \n    \n       </mat-select>\n    </mat-form-field>\n    <br>\n\n    <mat-form-field>\n        <mat-label>University</mat-label>\n     <input required formControlName=\"university\" matInput type=\"text\" name=\"\" id=\"\">\n     <mat-error  >University is required and a valid one.</mat-error>\n   \n    </mat-form-field>\n    <br>\n<mat-form-field>\n    <mat-label>About Your Self</mat-label>\n    <textarea required formControlName=\"about\" matInput type=\"text\" name=\"\" id=\"\"></textarea>\n    <mat-error  >About your self is required and must be atleast 3 words.</mat-error>\n\n</mat-form-field>\n\n<br>\n<div formArrayName=\"expertise\">\n   \n    <div *ngFor=\"let ex of expertise.controls let i =index\" [formGroupName]=\"i\" >\n    <mat-form-field  >\n        <mat-label>Expertise {{i+1}}</mat-label>\n        \n        \n       <mat-select required  formControlName=\"exname\" >      \n        <mat-option>None</mat-option>\n        <mat-option value=\"Java\">Java</mat-option>\n        <mat-option value=\"Angular\">Angular</mat-option>\n        <mat-option value=\"NodeJS\">NodeJS</mat-option>\n        <mat-option value=\"ReactJS\">ReactJS</mat-option>    \n    \n    \n       </mat-select>\n       <mat-error  >Expertise is required and a valid one.</mat-error>\n      \n\n      \n    </mat-form-field><br>\n    <mat-form-field appearance=\"\">\n        <mat-label>Choose a Start date</mat-label>\n        <input matInput [matDatepicker]=\"picker\"  required  formControlName=\"sdate\" >\n        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n        <mat-datepicker #picker></mat-datepicker>\n        <mat-error  >Start date must be valid one.</mat-error>\n      \n      </mat-form-field>\n      <mat-form-field appearance=\"\">\n        <mat-label>Choose a End date</mat-label>\n        <input matInput [matDatepicker]=\"epicker\"  required  formControlName=\"edate\"  >\n        <mat-datepicker-toggle matSuffix [for]=\"epicker\"></mat-datepicker-toggle>\n        <mat-datepicker #epicker></mat-datepicker>\n        <mat-error  >End date must be valid one.</mat-error>\n      \n      </mat-form-field>\n     \n     <mat-form-field><mat-label>No of Years of Expertise</mat-label>\n         <input formControlName=\"nxp\" matInput type=\"number\">\n     </mat-form-field><br>\n      \n</div> <button (click)=\"onClick()\">Add Expertise</button><br>\n\n\n</div>\n      \n    </div>\n\n    <br><br>\n    <button mat-raised-button color=\"warn\" type=\"reset\" (click)=\"onResset()\">Reset</button>\n    <br><br>\n    <button mat-raised-button color=\"accent\" (click)=\"onEdit()\">    Submit    </button>\n\n\n\n\n</div>\n<div  [hidden]=\"!toggle\" style=\"text-align: center; padding-top: 150px;\"><h1>Form was Submitted sucessfully </h1>\n<h2>press ESC to continue...</h2></div>\n</form>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, Validators, FormGroupDirective, NgForm } from \"@angular/forms\";\nimport { Expertise,UserForm,FormServeService } from '../form-serve.service';\nimport { Subscription } from 'rxjs';\n\n\n@Component({\n  selector: 'app-form-one',\n  templateUrl: './form-one.component.html',\n  styleUrls: ['./form-one.component.css']\n})\nexport class FormOneComponent implements OnInit {\n\n  private count=0;\n  @ViewChild('formDirective') private formDirective : NgForm;\n\n  constructor(private fb : FormBuilder,private ex_service : FormServeService) { }\n\n  ngOnInit(): void {\n    \n  }\nmyformone=this.fb.group({\n  name:[\"\",[Validators.required,Validators.minLength(4)]],\n  position:[],\n  age:[\"\",[Validators.required,Validators.max(100),]],\n  location:[\"\",[Validators.required,Validators.minLength(3)]],\n  adar:[\"\",[Validators.required,Validators.minLength(12)]],\n  email:[\"\",[Validators.required,Validators.email]],\n  pan:[\"\",[Validators.required,Validators.minLength(8)]],\n  gender:[\"\",]\n})\n\n\nget name(){\n  return this.myformone.value.name;\n}\nget position(){\n  return this.myformone.value.position;\n}\nget age(){\n  return this.myformone.value.age;\n}\nget location(){\n  return this.myformone.value.location;\n}\nget adar(){\n  return this.myformone.value.adar;\n}\nget email(){\n  return this.myformone.value.email;\n}\nget pan(){\n  return this.myformone.value.pan;\n}\nget gender(){\n  return this.myformone.value.gender;\n}\n\npublic myformtw :FormTwo;\npublic wForm :UserForm;\npublic oform:FormOne;\n\nonResset(){\n  \n  this.myformone.reset();\n  this.formDirective.resetForm();\nthis.myformone.clearAsyncValidators();\n  this.myformone.markAsUntouched;\n  this.myformone.markAsPristine;\n  this.myformone.clearValidators();\n}\nonSubmitt(myvara : FormTwo){\n  this.oform=this.myformone.value;\n  \n  this.oform.position=this.count++;\n  \n  this.ex_service.addData({name:this.oform.name\n                          ,position:this.oform.position,\n                          age:this.oform.age,\n                          location:this.oform.location,\n                          adar:this.oform.adar,\n                          email:this.oform.email,\n                          gender:this.oform.gender,\n                          pan:this.oform.pan,\n                          qualification:myvara.qualification,\n                          about:myvara.about,\n                          university:myvara.university,\n                          expertise:myvara.expertise});\n\n                          alert(\"Form Submitted Sucessfully\");\n\n  this.onResset();\n  this.ex_service.reloadTab({opt:\"Sucessfully reloaded table\"});\n}\nonEdit(row :UserForm){\n\n  this.myformone.patchValue({name:row.name,position:row.position,age:row.age,location:row.location,adar:row.adar,email:row.email,gender:row.gender,pan:row.pan});\n  this.myformtw={qualification:row.qualification,about:row.about,university:row.university,expertise:row.expertise};\n  this.ex_service.notifyChild({qualification:row.qualification,about:row.about,university:row.university,expertise:row.expertise});\n}\n\n\n}\n\n\n\nexport interface FormTwo{\n\n  qualification:string[];\n  university:string;\n  about:string;\n  expertise:Expertise[];\n\n\n\n}\nexport interface FormOne{\n  name:string,\n  position:number,\n  age:number,\n  location:string,\n  adar:number,\n  email:string,\n  pan:string,\n  gender:string\n}\n\n","<div class=\"split\">\n    <br>\n    <br>\n    <br>\n<div class=\"container\" >\n \n    <form [formGroup]=\"myformone\" #formDirective=\"ngForm\">\n        <article>\n        <div class=\"left\">\n<mat-form-field>\n    <mat-label>Name</mat-label>\n<input  formControlName=\"name\" matInput type=\"text\"  >\n<mat-error  >Name is required and must be aleast 4 characters</mat-error>\n\n</mat-form-field>\n<br>\n \n<mat-form-field>\n    <mat-label>Email</mat-label>\n<input  formControlName=\"email\" matInput type=\"email\" >\n<mat-error  >Email is required and Must be a valid one</mat-error>\n</mat-form-field>\n\n\n<mat-form-field>\n    <mat-label>Age</mat-label>\n<input  formControlName=\"age\" matInput type=\"number\" >\n<mat-error  > Age is Required and cannot be greater than 100</mat-error>\n\n</mat-form-field>\n\n<mat-form-field>\n    <mat-label>Location</mat-label>\n<input  formControlName=\"location\" matInput type=\"text\" >\n<mat-error  >Location is required and must be atleast 3 characters</mat-error>\n</mat-form-field>\n\n<div>\n<mat-radio-group   formControlName=\"gender\">\n    <mat-label>gender</mat-label>\n    <mat-radio-button value=\"male\">Male</mat-radio-button>\n    <mat-radio-button value=\"Female\">female</mat-radio-button>\n </mat-radio-group>\n</div>\n   \n\n<br>\n<mat-form-field>\n    <mat-label>Aadhar number</mat-label>\n<input  formControlName=\"adar\" matInput type=\"number\" >\n<mat-error  >Aadhar is required and  must be a valid one.</mat-error>\n</mat-form-field>\n\n\n<mat-form-field>\n    <mat-label>PAN number</mat-label>\n<input  formControlName=\"pan\" matInput type=\"text\" >\n<mat-error  >PAN is required and must be a valid one.</mat-error>\n\n</mat-form-field>\n\n</div>\n        </article><article>\n<aside class=\"reright\">\n<app-form-two (childev)=\"onResset()\"(subev)=\"onSubmitt($event)\"> hi </app-form-two>\n</aside>\n\n</article></form>\n\n\n\n\n\n</div>\n<br><br><br><br>\n<div class=\"tab\"><app-new-form (manaev)=\"onEdit($event)\"></app-new-form>\n    </div>\n\n\n</div>","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { FormTwo } from './form-one/form-one.component';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class FormServeService {\n\n  constructor() { }\n  d1=new Date();\n  d2=new Date();\n\n\n   static ulist: UserForm[]=[] ;\n  /**\n   * name\n   */\n  \n  public getData():UserForm[] {\n    console.log(FormServeService.ulist);\n    return FormServeService.ulist;\n    \n  }\n  \n  public editData(usr : UserForm,){\n    for (let index = 0; index < FormServeService.ulist.length; index++) {\n      if (usr.position==FormServeService.ulist[index].position){\n        FormServeService.ulist[index]=usr;\n      }\n\n   \n  }}\n   public addData(usr :UserForm){\n    console.log(usr);\n    FormServeService.ulist[usr.position]=usr;\n    console.log(FormServeService.ulist);\n  }\n  public delData(usr : UserForm){\n    for (let index = 0; index < FormServeService.ulist.length; index++) {\n      if (usr.name==FormServeService.ulist[index].name){\n        FormServeService.ulist.splice(index,1);\n      }\n      \n    }\n       \n\n     \n\n  }\n  /**\n   * notifyChild\n   */\n  public notifyChild(row : FormTwo) {\n    if(row){\n      alert(row.about+row.expertise);\n      this.notify$.next(row)\n    }else{alert(\"Null\")}\n    \n  }\n  public reloadTab(row : any) {\n    if(row){\n      this.reload.next(row);\n    }\n    \n  }\n\n   notify$=new Subject<any>();\n   private reload =new Subject<any>();\n   reloadObsservable$=this.reload.asObservable();\n\n\n}\n\n\nexport interface UserForm {\n  name: string;\n  position: number;\n  age: number;\n  location: string;\n  adar:number;\n  email:string;\n  gender:string;\n  pan:string;\n  qualification:string[];\n  university:string;\n  about:string;\n  expertise:Expertise[];\n\n\n}\nexport interface Expertise{\n  exname:string;\n  sdate:Date;\n  edate:Date;\n  nxp:number;\n}","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { FormBuilder ,FormArray, FormGroup, FormControl, Validators} from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { FormServeService } from '../form-serve.service';\n\n\n@Component({\n  selector: 'app-form-two',\n  templateUrl: './form-two.component.html',\n  styleUrls: ['./form-two.component.css']\n})\nexport class FormTwoComponent implements OnInit {\n\n\n \n  @Output() public childev=new EventEmitter();\n  @Output() public subev=new EventEmitter();\n  \n  constructor(private fb:FormBuilder,private exserve :FormServeService) {\n    \n     }\n     private subs:Subscription;\n     public count=0;\n     myformtwo=this.fb.group({\n      qualification:[\"\",[Validators.required]],\n      university:[\"\",[Validators.required,Validators.minLength(4)]],\n      about:[\"\",[Validators.required,Validators.minLength(15)]],\n      expertise:this.fb.array([\n       this.addExp()\n       \n      ]),\n      \n      })\n      \n      \n      \n      public get qualification() {\n        return this.myformtwo.value.qualification;\n\n      }\n      public get university() {\n        return this.myformtwo.value.university;\n        \n      }\n      public get about() {\n        return this.myformtwo.value.about;\n        \n      }\n    \n      \n      \n      ngOnInit(): void {\n       this.subs= this.exserve.notify$.subscribe((res)=>{\n          this.myformtwo.patchValue=res;\n          console.log(res);\n        })\n        \n      }\n\n      onResset(){\n        this.myformtwo.reset();\n        this.childev.emit();\n        this.myformtwo.clearValidators();\n        \n        }\n\n        addExp (): FormGroup{\n          return this.fb.group({\n             exname:[\"\",[Validators.required]],\n             sdate:[\"\",[Validators.required]],\n             edate:[\"\",[Validators.required]],\n             nxp:[]\n           })\n         };\n         get expertise() {\n          this.calcDate();\n          return this.myformtwo.get('expertise') as FormArray;\n        }\n        onClick(){\n          \n          this.expertise.push(this.addExp());\n        }\n        \n        \n        calcDate(){\n          let wArr=this.myformtwo.controls['expertise'].value;\n          for (let index = 0; index < wArr.length; index++) {\n            let edate=new Date(wArr[index].edate);\n          \n          let sdate=new Date(wArr[index].sdate);\n         \n          let yeardiff=edate.getFullYear()-sdate.getFullYear();\n          this.count=yeardiff;\n          wArr[index].nxp=yeardiff;\n          \n            \n          }\n          \n          this.myformtwo.controls['expertise'].patchValue(wArr);\n          \n        }\n\n        onSubmitt(){\n          this.subev.emit(this.myformtwo.value);\n          this.myformtwo.reset();\n        }\n        \n\n     }\n\n\n\n\n","\n\n<div [formGroup]=\"myformtwo\">\n    \n    <mat-form-field>\n    <mat-label>Qualification</mat-label>\n        <mat-select required formControlName=\"qualification\" multiple>      \n       \n        <mat-option value=\"ME\">ME</mat-option>\n        <mat-option value=\"BE\">BE</mat-option>\n        <mat-option value=\"MBA\">MBA</mat-option>\n           \n    \n       \n       </mat-select>\n    </mat-form-field>\n    \n\n    <mat-form-field>\n        <mat-label>University</mat-label>\n     <input required formControlName=\"university\" matInput type=\"text\" name=\"\" id=\"\">\n     <mat-error  >University is required and a valid one.</mat-error>\n    </mat-form-field>\n    <br>\n<mat-form-field>\n    <mat-label>About Your Self</mat-label>\n    <textarea required formControlName=\"about\" matInput type=\"text\" name=\"\" id=\"\"></textarea>\n    <mat-error  >About your self is required and must be atleast 3 words.</mat-error>\n</mat-form-field>\n\n<br>\n<div formArrayName=\"expertise\">\n   \n    <div *ngFor=\"let ex of expertise.controls let i =index\" [formGroupName]=\"i\" >\n    <mat-form-field  >\n        <mat-label>Expertise {{i+1}}</mat-label>\n        \n        \n       <mat-select required  formControlName=\"exname\" >      \n        <mat-option>None</mat-option>\n        <mat-option value=\"Java\">Java</mat-option>\n        <mat-option value=\"Angular\">Angular</mat-option>\n        <mat-option value=\"NodeJS\">NodeJS</mat-option>\n        <mat-option value=\"ReactJS\">ReactJS</mat-option>    \n    \n    \n       </mat-select>\n       \n       <mat-error  >Expertise is required and a valid one.</mat-error>\n      \n    </mat-form-field>\n    <mat-form-field appearance=\"\">\n        <mat-label>Choose a Start date</mat-label>\n        <input matInput [matDatepicker]=\"picker\"  required  formControlName=\"sdate\" >\n        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n        <mat-datepicker #picker></mat-datepicker>\n        <mat-error  >Start date must be valid one.</mat-error>\n      </mat-form-field>\n      <mat-form-field appearance=\"\">\n        <mat-label>Choose a End date</mat-label>\n        <input matInput [matDatepicker]=\"epicker\"  required  formControlName=\"edate\"  >\n        <mat-datepicker-toggle matSuffix [for]=\"epicker\"></mat-datepicker-toggle>\n        <mat-datepicker #epicker></mat-datepicker>\n        <mat-error  >End date must be valid one.</mat-error>\n      </mat-form-field>\n     \n     <mat-form-field><mat-label>No of Years of Expertise</mat-label>\n         <input formControlName=\"nxp\" matInput type=\"number\">\n     </mat-form-field>\n     <button mat-raised-button color=\"primary\" (click)=\"onClick()\">Add Expertise</button>\n       \n      \n</div><br>\n\n\n   \n      \n    </div>\n<br><br>\n <button  style=\"float: left;\" mat-fab color=\"warn\" type=\"reset\" (click)=\"onResset()\"><mat-icon>cached</mat-icon></button>\n    \n    \n    <button [disabled]=\"!myformtwo.valid\" style=\"float: right;\" mat-fab color=\"accent\" (click)=\"onSubmitt()\"><mat-icon>done</mat-icon></button>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { User } from '../user';\n\n@Component({\n  selector: 'app-indxp',\n  templateUrl: './indxp.component.html',\n  styleUrls: ['./indxp.component.css']\n})\nexport class IndxpComponent implements OnInit {\n\n  genderarr=['Male','Female'];\n  vuser=new User(\"\",\"\",\"\",false,\"\");\n  constructor() { }\n\n  ngOnInit(): void {\n\n    console.log(\"Index Component Initialized\");\n  }\n  isDone() : boolean{\n    return !this.vuser.accept;\n  }\n\n  isSame() : boolean{\n    console.log(this.vuser.password);\n    console.log(this.vuser.cpassword);\n    if(this.vuser.password==this.vuser.cpassword){return false}else return true;\n  }\n  Submit():void{\n    alert(\"Form Successfully Submitted for ,\\n Email : \"+this.vuser.email+\",\\nPassword is : \"+this.vuser.password+\"\\nGender:\"+this.vuser.gender);\n  }\n  Cancel(){\n    location.reload();\n  }\n  isDef():boolean{\n    let x= this.vuser.gender;\n    if(x==\"\"){\n      return true;\n    }else return false;\n  \n  }\n\n}\n","<br><br><br>\n\n<div class=\"container\">\n<form action=\"\" #signup=\"ngForm\">\n    <h2>Sign-up</h2>\n    <div class=\"form-group\">\n        <label  >Email</label>\n            <input required #email='ngModel' pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$\" type=\"email\" name=\"email\" id= \"\" class=\"form-control\"\n            [class.is-invalid]=\"email.invalid && email.touched\" [(ngModel)]=\"vuser.email\">\n           <div *ngIf=\"email.errors && (email.invalid&&email.touched)\">\n            <small class=\"text-danger\" *ngIf=\"email.errors.pattern\">Please enter a Valid Email</small>\n            <small class=\"text-danger\" *ngIf=\"email.errors.required\">Email is a Mandatory Field</small>\n           </div>\n            \n    </div>\n\n    <div class=\"form-group\">\n        <label >Password :</label>\n            <input required #pwd=\"ngModel\"  pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\" type=\"password\" name=\"pwd\" id= \"\" class=\"form-control\"\n            [class.is-invalid]=\"pwd.invalid && pwd.touched\" [(ngModel)]=\"vuser.password\">\n            <div *ngIf=\"pwd.errors && (pwd.invalid&&pwd.touched)\">\n                <small class=\"text-danger\" *ngIf=\"pwd.errors.pattern\">Password Must contain mininum 8 characters with Alpha-Numeric and One special character</small>\n                <small class=\"text-danger\" *ngIf=\"pwd.errors.required\">Password is a Mandatory Field</small>\n               </div>\n    </div>\n    <div class=\"form-group\">\n        <label >Confirm Password :</label>\n            <input required #cpwd=\"ngModel\"  pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\" type=\"password\" name=\"cpwd\" id= \"\" class=\"form-control\"\n            [class.is-invalid]=\"cpwd.invalid && cpwd.touched \"  [(ngModel)]=\"vuser.cpassword\">\n            <div *ngIf=\"cpwd.errors && (cpwd.invalid&&cpwd.touched)\">\n                <small class=\"text-danger\" *ngIf=\"cpwd.errors.pattern\">Password Must contain mininum 8 characters with Alpha-Numeric and One special character</small>\n                <small class=\"text-danger\" *ngIf=\"cpwd.errors.required\">Password is a Mandatory Field</small>\n               </div>\n            <small class=\"text-danger\" *ngIf=\"isSame()&&cpwd.touched\">Passwords doesnot Match</small>\n    </div>\n\n    <div class=\"form-group\"><select #selg=\"ngModel\" required name=\"selg\" [class.is-invalid]=\"selg.errors&&selg.touched\" class=\"custom-select\" [(ngModel)]=\"vuser.gender\">\n        <label >Accept :</label>\n           <option selected value=\"\" >Please select your Gender</option>\n            <option value=\"Male\">Male</option>\n            <option value=\"Female\">Female</option>\n        </select>\n        <small *ngIf=\"selg.errors&&selg.touched\" class=\"text-danger\">Please Select a Valid Option</small>\n    </div>\n\n    <div class=\"form-check mb-3\">\n       \n            <input required #cxb=\"ngModel\" class=\"form-check-input\" type=\"checkbox\" name=\"cxb\" id= \"\" \n            \n            [class.is-invalid]=\"cxb.invalid && cxb.touched\" [(ngModel)]=\"vuser.accept\" >\n            <label class=\"form-check-label\" >Accept</label><br>\n            <small class=\"text-danger\" *ngIf=\"isDone()&&cxb.touched\" >(It is Mandatory to Accept)</small>\n    </div>\n    \n    <div class=\"btn-group\">\n     <button class=\"btn btn-danger\"  (click)=\"Cancel()\">Cancel</button>\n        <button [disabled]=\"signup.form.invalid\" class=\"btn btn-success\" (click)=\"Submit()\">Submit</button>\n    </div>\n    \n    \n  \n</form>\n</div>\n<a [routerLink]=\"['formone']\">Topic-Four</a>","import { Component, OnInit, ViewChild, EventEmitter, Output } from '@angular/core';\nimport { MaxLengthValidator } from '@angular/forms';\nimport { UserForm, FormServeService } from '../form-serve.service';\nimport { MatTable, MatTableDataSource} from '@angular/material/table';\nimport { MatDialog } from '@angular/material/dialog';\nimport { EditComponentComponent } from '../edit-component/edit-component.component';\nimport { Subscription } from 'rxjs';\nimport { MatSort } from '@angular/material/sort';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatIconRegistry } from \"@angular/material/icon\";\n\n\n\n\nlet ELEMENT_DATA: UserForm[] = [\n \n];\n\n\n\n\n\n\n@Component({\n  selector: 'app-new-form',\n  templateUrl: './new-form.component.html',\n  styleUrls: ['./new-form.component.css']\n})\nexport class NewFormComponent implements OnInit   {\n\n  displayedColumns: string[] = ['position', 'name', 'age', 'location','adar','pan','email','gender','qualification','about','university','action'];\n  dataSource =new MatTableDataSource( ELEMENT_DATA);\n  @ViewChild(MatTable,{static:true}) mytab:MatTable<any>;\n \n  private reloadSub:Subscription;\n  constructor(iconreg: MatIconRegistry,private ex_service :FormServeService,public dlg : MatDialog) { }\n  @Output() public manaev=new EventEmitter();\n  @ViewChild(MatSort) sort:MatSort;\n  @ViewChild(MatPaginator) paginator:MatPaginator;\n \n\n  ngOnInit(): void {\n \n    ELEMENT_DATA=this.ex_service.getData();\n    console.log(ELEMENT_DATA);\n   \n    this.reloadSub=this.ex_service.reloadObsservable$.subscribe((res)=>\n    {if(res){this.onReload();}}\n    );\n\n      \n   \n  }\n\n  ngOnDestroy(){\n    this.reloadSub.unsubscribe();\n  }\n  onReload(){\n    this.dataSource.data = this.ex_service.getData();\n    console.log(this.ex_service.getData());\n    console.log(this.dataSource);\n    this.mytab.renderRows();\n    this.dataSource.sort=this.sort;\n    this.dataSource.paginator=this.paginator;\n\n\n  }\n  onSearch(fil : string){\n\n\n    this.dataSource.filter=fil.trim().toLowerCase();\n  }\n  onEdit(row: UserForm){\n    this.dlg.open(EditComponentComponent,{data:row});\n\n    this.manaev.emit(row);\n\n\n  }\n  onDelete(row: UserForm){\n    this.ex_service.delData(row);\n    alert(\"deleted sucessfully\");\n    this.mytab.renderRows();\n  }\n\n}\n","<div class=\"ng-container\">\n<mat-form-field class=\"newm\">\n  <input (keyup)=\"onSearch($event.target.value)\" matInput placeholder=\"Search\">\n  \n  </mat-form-field>\n  \n<mat-table [dataSource]=\"dataSource\" matSort  #mytab >\n    <!-- Position Column -->\n    <hr style=\"background-color: black;\">\n    \n    <ng-container matColumnDef=\"position\">\n      <mat-header-cell mat-sort-header *matHeaderCellDef><strong> No. </strong></mat-header-cell>\n      <mat-cell *matCellDef=\"let element\"> {{element.position}} </mat-cell>\n    </ng-container>\n  \n    <!-- Name Column -->\n    <ng-container matColumnDef=\"name\">\n      <mat-header-cell mat-sort-header *matHeaderCellDef> <strong> Name </strong> </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\"> {{element.name}} </mat-cell>\n    </ng-container>\n  \n    <!-- Weight Column -->\n    <ng-container matColumnDef=\"age\">\n      <mat-header-cell mat-sort-header *matHeaderCellDef> <strong> Age </strong> </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\"> {{element.age}} </mat-cell>\n    </ng-container>\n  \n    <!-- Symbol Column -->\n    <ng-container matColumnDef=\"adar\">\n      <mat-header-cell mat-sort-header *matHeaderCellDef> <strong> Adar </strong> </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\"> {{element.adar}} </mat-cell>\n    </ng-container>\n  \n    \n  \n    <!-- Weight Column -->\n    <ng-container matColumnDef=\"pan\">\n      <mat-header-cell mat-sort-header *matHeaderCellDef> <strong> Pan </strong> </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\"> {{element.pan}} </mat-cell>\n    </ng-container>\n  \n    <!-- Symbol Column -->\n    <ng-container matColumnDef=\"email\">\n      <mat-header-cell mat-sort-header *matHeaderCellDef> <strong> Email </strong> </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\"> {{element.email}} </mat-cell>\n    </ng-container>\n  \n  \n    <!-- Weight Column -->\n    <ng-container matColumnDef=\"location\">\n      <mat-header-cell mat-sort-header *matHeaderCellDef> <strong> Location </strong> </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\"> {{element.location}} </mat-cell>\n    </ng-container>\n  \n    <!-- Symbol Column -->\n    <ng-container matColumnDef=\"qualification\">\n      <mat-header-cell mat-sort-header *matHeaderCellDef> <strong> Qualification </strong> </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\"> {{element.qualification}} </mat-cell>\n    </ng-container>\n  \n    <ng-container matColumnDef=\"university\">\n      <mat-header-cell mat-sort-header *matHeaderCellDef> <strong> University </strong> </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\"> {{element.university}} </mat-cell>\n    </ng-container>\n  \n    <!-- Symbol Column -->\n    <ng-container matColumnDef=\"about\">\n      <mat-header-cell mat-sort-header *matHeaderCellDef> <strong> About </strong> </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\"> {{element.about}} </mat-cell>\n    </ng-container>\n  \n  \n    <!-- Weight Column -->\n    \n  \n    <!-- Symbol Column -->\n    <ng-container matColumnDef=\"gender\">\n      <mat-header-cell mat-sort-header *matHeaderCellDef> <strong> Gender </strong> </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\"> {{element.gender}} </mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"action\">\n      <mat-header-cell *matHeaderCellDef> <strong> Actions </strong> </mat-header-cell>\n      <mat-cell *matCellDef=\"let row\">\n        \n        <button mat-mini-fab color=\"primary\" (click)=\"onEdit(row)\"><mat-icon>edit</mat-icon></button> \n        <button mat-mini-fab color=\"warn\" aria-hidden='false' (click)=\"onDelete(row)\"><mat-icon>delete</mat-icon></button> \n      </mat-cell>\n      \n    </ng-container>\n    \n    \n\n    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n    <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\n\n   \n  </mat-table>\n  \n\n\n\n<mat-paginator [pageSizeOptions]=\"[2,3,5]\" showFirstLastButtons ></mat-paginator>\n\n</div>","export class User {\n    constructor(\n\n        public email : string,\n        public password : string,\n        public cpassword :string,\n        public accept:boolean,\n        public gender : string\n\n    ){}}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}